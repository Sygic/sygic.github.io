{"version":3,"sources":["components/util/MappingUtil.js","components/LoggerConfig.js","components/util/SchemaParser.js","components/CustomSelect.js","components/util/SchemaValidator.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["_mapFieldsFromConfig","config","allFields","isImported","fieldList","_mapConfigToFields","flatMap","c","concat","Object","toConsumableArray","elements","children","obj","create","forEach","element","field","dotProp","get","path","resolved","valueResolver","undefined","shouldSet","set","value","touched","Array","find","e","map","mapFieldsToConfig","form","fields","formConfig","Panel","Collapse","Option","Select","formItemLayout","_createFormField","getFieldDecorator","react_default","a","createElement","es_form","Item","assign","key","name","label","objectSpread","decoratorProps","initialValue","rules","CreateAppenderConfig","items","properties","appenders","anyOf","propElement","title","enabled","getFieldValue","collapse","header","react_markdown_default","source","description","valuePropName","es_checkbox","style","display","entries","pair","parent","retObj","popover","content","placement","default","const","type","input_number","min","enum","es_select","placeholder","input","disabled","requiredRule","required","indexOf","substr","lastIndexOf","_mapElementToConfig","EditorConfiguration","keys","excludeKeys","props","Audio.SoundSettings.speedcam_warn_sound","enableCustom","Audio.SoundSettings.danger_turn_notif_sound","Audio.SoundSettings.speed_limit_warn_sound","Audio.SoundSettings.warn_near_rail_sound","Audio.SoundSettings.traffic_notif_sound","Audio.SoundSettings.scout_route_notif_sound","Audio.SoundSettings.last_mile_notif_sound","Logging","mappedField","classpath","mapped","appender","_mapToJson","push","getFieldPaths","filter","appenderElement","parentPath","render","_filterKeys","keyList","excludeFilter","filterList","replace","excludeFilterList","length","filterIndex","match","_processElement","$ref","split","Schema","slice","join","allOf","reduce","acc","val","DeepMerge","_mapToSchemaPropsPath","_isFieldRequired","schemaProperties","console","error","lastIndex","substring","elementName","noOp","SchemaParser","parseSchema","_parseProperties","pathPrefix","retArr","property","index","_addElementsToConfig","id","elementTransform","isRequired","child","CustomSelect","state","searchTerm","onSearch","_this","setState","onChange","options","CustomSelect_Option","this","showSearch","defaultActiveFirstOption","showArrow","filterOption","Component","validator","Validator","ButtonGroup","Button","Group","marginBottom","wrapperCol","span","nestedFormItemLayout","_humanize","text","toUpperCase","mapArrayItemToSelect","item","attrs","MainContent_Option","mode","getDescriptionText","ConfigurationForm","_elementHasErrors","paths","getFieldError","errors","arrayHasElementsRecursive","arr","_mapConfigurationToElement","nested","arguments","showKey","isVisible","showEnable","hasErrors","MainContent_Panel","color","keyName","handleCheckboxChange","evt","target","checked","setFieldsValue","_this2","validationRule","numberProps","minimum","maximum","max","$id","fieldValue","showReset","isFieldTouched","es_button","onClick","resetFields","icon","cursor","selectOptions","CustomSelect_CustomSelect","pattern","_this3","className","layout","bordered","React","WrappedRegistrationForm","Form","onValuesChange","changedValues","allValues","onFieldsChange","MainContent","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","configString","importModalVisible","validateModalVisible","importErrors","jsonToImportString","jsonToImport","_onFieldsChange","debounce","JSON","stringify","has","_importBtnPress","_dirtyAppendersHackTransform","jsonConfig","class","_handleImportOk","loggingHack","parse","L","level","toLowerCase","message","errorList","_getValidationErrors","formRef","validateFields","_handleImportCancel","_showValidation","Modal","width","err","es_alert","showIcon","success","jsonObj","validationResult","validate","base","stack","_this5","row","col","wrappedComponentRef","inst","offset","modal","visible","onOk","onCancel","TextArea","rows","Header","Layout","Sider","Content","App","background","alt","src","margin","MainContent_MainContent","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.776037dd.chunk.js","sourcesContent":["import dotProp from 'dot-prop';\n\nfunction _mapConfigToFields(config) {\n  return config.flatMap(c => {\n    return [...c.elements, ..._mapConfigToFields(c.children)];\n  });\n}\n\nfunction _mapFieldsFromConfig(config, allFields, isImported) {\n  const fieldList = _mapConfigToFields(config);\n  // console.log(fieldList);\n  const obj = Object.create(null);\n  fieldList.forEach(element => {\n    const field = dotProp.get(allFields, element.path);\n    // This is stupid, but well, this is javascript\n    const resolved = !!element.valueResolver\n      ? element.valueResolver(field)\n      : undefined;\n    if (!!resolved && resolved.shouldSet) {\n      // console.log(resolved.path, 'setting value', resolved.value);\n      dotProp.set(obj, resolved.path, resolved.value);\n    } else if (!!field && (!!field.touched || isImported(element.path))) {\n      // console.log(element.path, 'setting value', field.value);\n      if (field.value !== undefined && field.value !== null) {\n        dotProp.set(obj, element.path, field.value);\n      }\n    } else {\n      if (field instanceof Array && !element.valueResolver) {\n        const touched = field.find(e => !!e.touched);\n        // console.log(field, touched);\n        if (!!touched) {\n          dotProp.set(obj, element.path, field.map(e => e.value));\n        }\n      }\n\n      // console.log(\n      //   'rejected',\n      //   (resolved || element || { path: 'no_path' }).path,\n      //   field,\n      //   element\n      // );\n    }\n  });\n  // console.log(obj);\n  return obj;\n}\n\nexport function mapFieldsToConfig(\n  form,\n  fields,\n  allFields,\n  formConfig,\n  isImported\n) {\n  return _mapFieldsFromConfig(formConfig, allFields, isImported);\n}\n","import React from 'react';\nimport {\n  Checkbox,\n  Collapse,\n  Form,\n  Input,\n  InputNumber,\n  Popover,\n  Select,\n} from 'antd';\nimport ReactMarkdown from 'react-markdown';\n\nconst { Panel } = Collapse;\nconst { Option } = Select;\nconst formItemLayout = {};\n\nfunction _mapElementToConfig(key, element, parent) {\n  const retObj = {\n    name: key,\n    label: element.description ? (\n      <Popover\n        content={element.description}\n        title=\"Documentation\"\n        placement=\"topLeft\"\n      >\n        {element.title}\n      </Popover>\n    ) : (\n      element.title\n    ),\n    initialValue: element.default || element.const,\n  };\n  if (element.type === 'boolean') {\n    retObj.decoratorProps = {\n      valuePropName: 'checked',\n    };\n    retObj.label = '';\n    retObj.element = <Checkbox>{element.title}</Checkbox>;\n  }\n\n  if (element.type === 'number' || element.type === 'integer') {\n    retObj.element = <InputNumber min={0} />;\n  }\n\n  if (!!element.enum) {\n    retObj.element = (\n      <Select placeholder=\"Please select\">\n        {element.enum.map(e => (\n          <Option key={e} value={e}>\n            {e}\n          </Option>\n        ))}\n      </Select>\n    );\n  } else if (element.type === 'string') {\n    retObj.element = <Input disabled={!!element.const} />;\n  }\n\n  const requiredRule = {};\n  requiredRule.required =\n    !!parent.required &&\n    parent.required.indexOf(key.substr(key.lastIndexOf('.') + 1)) !== -1;\n  retObj.rules = [requiredRule];\n  return retObj;\n}\n\nconst _createFormField = (getFieldDecorator, field) => {\n  return (\n    <Form.Item key={field.name} label={field.label} {...formItemLayout}>\n      {getFieldDecorator(field.name, {\n        ...field.decoratorProps,\n        initialValue: field.initialValue,\n        rules: field.rules,\n      })(field.element)}\n    </Form.Item>\n  );\n};\n\nexport function CreateAppenderConfig(form, config) {\n  // console.log(config);\n  const { getFieldDecorator } = form;\n  const element = config.elements[0];\n  const props = element.items.properties.appenders;\n  // console.log(props, props.items.anyOf);\n  return props.items.anyOf.map(propElement => {\n    // console.log(propElement.title);\n    const path = element.path + '.' + propElement.title;\n    const enabled = !!form.getFieldValue(path + '.enabled');\n    return (\n      <Collapse key={path}>\n        <Panel key={path + '_panel'} header={propElement.title}>\n          <ReactMarkdown source={propElement.description} />\n\n          {_createFormField(getFieldDecorator, {\n            name: path + '.enabled',\n            rules: [],\n            label: '',\n            decoratorProps: {\n              valuePropName: 'checked',\n            },\n            element: <Checkbox>Enable</Checkbox>,\n          })}\n          <div style={{ display: enabled ? 'block' : 'none' }}>\n            {Object.entries(propElement.properties).map(pair => {\n              // console.log(pair);\n              return _createFormField(\n                getFieldDecorator,\n                _mapElementToConfig(path + '.' + pair[0], pair[1], propElement)\n              );\n            })}\n          </div>\n        </Panel>\n      </Collapse>\n    );\n  });\n}\n\nfunction _mapToJson(appender) {\n  if (!appender || !appender.enabled.value) {\n    return null;\n  }\n  const retObj = Object.create(null);\n  Object.entries(appender).forEach(pair => {\n    if (pair[0] === 'enabled') {\n      return;\n    }\n    retObj[pair[0]] = pair[1].value;\n  });\n  return retObj;\n}\n\nexport function AppenderValueResolver(field) {\n  const mappedField = [\n    {\n      name: 'global',\n      classpath: '',\n      appenders: [],\n    },\n  ];\n\n  Object.entries(field).forEach(pair => {\n    const mapped = _mapToJson(pair[1]);\n    if (!!mapped) {\n      mappedField[0].appenders.push(mapped);\n    }\n  });\n  return {\n    shouldSet: true,\n    path: 'Logging',\n    value: mappedField,\n  };\n}\n","import dotProp from 'dot-prop';\nimport { default as Schema } from '../../schema_14x';\nimport * as DeepMerge from 'deepmerge';\nimport { AppenderValueResolver, CreateAppenderConfig } from '../LoggerConfig';\n\nfunction _parseProperties(props, pathPrefix) {\n  let retArr = [];\n  Object.keys(props).forEach(key => {\n    const property = props[key];\n    const path = pathPrefix === '' ? key : pathPrefix + '.' + key;\n    // console.log(key, property);\n    if (property.type === 'object') {\n      retArr = retArr.concat(_parseProperties(property.properties, path));\n    } else {\n      retArr.push(path);\n    }\n  });\n  return retArr;\n}\n\nconst EditorConfiguration = [\n  {\n    title: 'Licence',\n    description: 'Licence configuration information.',\n    keys: '^Authentication.*',\n  },\n  {\n    title: 'Online',\n    description: 'Configuration for online aspects of the SDK',\n    keys: ['^Online.General'],\n\n    children: [\n      {\n        title: 'Routing',\n        keys: '^Online.Routing.*',\n      },\n      {\n        title: 'Search',\n        keys: '^Online.Search.*',\n      },\n      {\n        title: 'SpeedCameras',\n        keys: '^SpeedCameras.*',\n      },\n    ],\n  },\n  {\n    title: 'Storage',\n    keys: '^StorageFolders.*',\n  },\n  {\n    title: 'Routing',\n    keys: '^Routing.*',\n  },\n  {\n    title: 'Navigation',\n    keys: '^Navigation.WarningSettings.*',\n  },\n  {\n    title: 'Audio',\n    children: [\n      {\n        title: 'General',\n        keys: '^Audio.SoundSettings.*',\n        excludeKeys: ['^Audio.SoundSettings.tts_*'],\n        props: {\n          'Audio.SoundSettings.speedcam_warn_sound': { enableCustom: true },\n          'Audio.SoundSettings.danger_turn_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.speed_limit_warn_sound': { enableCustom: true },\n          'Audio.SoundSettings.warn_near_rail_sound': { enableCustom: true },\n          'Audio.SoundSettings.traffic_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.scout_route_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.last_mile_notif_sound': { enableCustom: true },\n        },\n      },\n      {\n        title: 'TTS',\n        keys: '^Audio.SoundSettings.tts_*',\n      },\n    ],\n  },\n  {\n    title: 'Drivers Behaviour',\n    keys: '^DriversBehavior.enable',\n    children: [\n      {\n        title: 'Configuration',\n        keys: '^DriversBehavior.*',\n        excludeKeys: '^DriversBehavior.enable',\n      },\n    ],\n  },\n  {\n    title: 'Logging',\n    keys: '^Logging',\n    props: {\n      Logging: {\n        valueResolver: AppenderValueResolver,\n      },\n    },\n    getFieldPaths: (form, element) => {\n      return element.items.properties.appenders.items.anyOf\n        .filter(\n          appenderElement =>\n            !!form.getFieldValue(\n              element.path + '.' + appenderElement.title + '.enabled'\n            )\n        )\n        .map(appenderElement => ({\n          parentPath: element.path + '.' + appenderElement.title,\n          elements: Object.entries(appenderElement.properties),\n        }))\n        .flatMap(e => e.elements.map(pair => e.parentPath + '.' + pair[0]));\n    },\n    render: (form, config) => CreateAppenderConfig(form, config),\n  },\n];\n\nfunction _filterKeys(keyList, filter, excludeFilter) {\n  const filterList = (filter instanceof Array\n    ? filter\n    : filter\n      ? [filter]\n      : []\n  ).map(e => {\n    return e.replace(/\\./, '\\\\.').replace(/\\*/, '.+?');\n  });\n  const excludeFilterList = (excludeFilter instanceof Array\n    ? excludeFilter\n    : excludeFilter\n      ? [excludeFilter]\n      : []\n  ).map(e => {\n    return e.replace(/\\./, '\\\\.').replace(/\\*/, '.+?');\n  });\n\n  if (!filterList.length && !excludeFilterList.length) {\n    return [];\n  }\n\n  return keyList.filter(key => {\n    for (const filterIndex in excludeFilterList) {\n      if (key.match(excludeFilterList[filterIndex])) {\n        return false;\n      }\n    }\n\n    for (const filterIndex in filterList) {\n      if (key.match(filterList[filterIndex])) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\nfunction _mergeAllOf(allOfArr) {\n  return _processElement(\n    allOfArr\n      .map(_processElement)\n      .reduce((acc, val) => DeepMerge(acc, val), Object.create(null))\n  );\n}\n\nfunction _processElement(element) {\n  if (element === undefined || element === null) {\n    return element;\n  }\n\n  if (!!element.$ref) {\n    const split = element.$ref.split('/');\n    return dotProp.get(Schema, split.slice(1).join('.'));\n  }\n  if (!!element.anyOf && element.anyOf instanceof Array) {\n    return { anyOf: element.anyOf.map(_processElement) };\n  }\n\n  // console.log('Processing element', element);\n  if (!!element.allOf) {\n    return _mergeAllOf(element.allOf);\n  }\n\n  if (element.type === 'array' && !!element.items) {\n    // console.log('------>', element.$id, element);\n    const items = element.items;\n    if (items instanceof Array) {\n      element.items = items.map(_processElement);\n    } else {\n      element.items = _processElement(items);\n    }\n  }\n\n  if (element.type === 'object' && !!element.properties) {\n    Object.entries(element.properties).forEach(pair => {\n      element.properties[pair[0]] = _processElement(pair[1]);\n    });\n  }\n\n  return element;\n}\n\nfunction _mapToSchemaPropsPath(path: String) {\n  return path.split('.').join('.properties.');\n}\n\nfunction _isFieldRequired(schemaProperties, path) {\n  if (!path) {\n    console.error('Missing path!');\n    return false;\n  }\n  const lastIndex = path.lastIndexOf('.');\n  const props = dotProp.get(\n    schemaProperties,\n    _mapToSchemaPropsPath(path.substring(0, lastIndex))\n  );\n  if (!props) {\n    return false;\n  }\n  const elementName = path.substring(lastIndex + 1);\n  return !!props.required && props.required.indexOf(elementName) !== -1;\n}\n\nfunction noOp(e) {\n  return e;\n}\n\nfunction _addElementsToConfig(keyList, config, id) {\n  return {\n    id,\n    ...config,\n    elements: _filterKeys(keyList, config.keys, config.excludeKeys)\n      .map(path => ({\n        ...dotProp.get(Schema.properties, _mapToSchemaPropsPath(path)),\n        path,\n      }))\n      .flatMap(config.elementTransform ? config.elementTransform : noOp)\n      .map(element => ({\n        ..._processElement(element),\n        path: element.path,\n        isRequired: _isFieldRequired(Schema.properties, element.path),\n        ...(!!config.props ? config.props[element.path] : undefined),\n      })),\n    children: (config.children || []).map((child, index) =>\n      _addElementsToConfig(keyList, child, `${id}.${index}`)\n    ),\n  };\n}\n\nexport default {\n  parseSchema: () => {\n    // console.log(Schema.properties);\n    const keyList = _parseProperties(Schema.properties, '');\n    // console.log(elements);\n    return EditorConfiguration.map((config, index) =>\n      _addElementsToConfig(keyList, config, index)\n    );\n  },\n};\n","import React, { Component } from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default class CustomSelect extends Component {\n  state = {\n    searchTerm: '',\n  };\n\n  onSearch = value => {\n    this.setState({ searchTerm: value });\n  };\n\n  onChange = value => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      <Option key={this.state.searchTerm} value={this.state.searchTerm}>\n        {this.state.searchTerm}\n      </Option>,\n      this.props.children,\n    ];\n    return (\n      <Select\n        {...this.props}\n        showSearch\n        defaultActiveFirstOption={false}\n        showArrow={true}\n        filterOption={true}\n        onSearch={this.onSearch}\n        onChange={this.onChange}\n      >\n        {options}\n      </Select>\n    );\n  }\n}\n","import { default as Schema } from '../../schema_14x';\nimport { Validator } from 'jsonschema';\n\nconst validator = new Validator();\n\nexport function validate(obj) {\n  return validator.validate(obj, Schema, { base: '' });\n}\n","import React, { Component } from 'react';\nimport {\n  Alert,\n  Button,\n  Checkbox,\n  Col,\n  Collapse,\n  Form,\n  Icon,\n  Input,\n  InputNumber,\n  Modal,\n  Row,\n  Popover,\n  Select,\n} from 'antd';\nimport { debounce } from 'debounce';\nimport ReactMarkdown from 'react-markdown';\nimport '../App.css';\nimport { mapFieldsToConfig } from './util/MappingUtil';\n\nimport SchemaParser from './util/SchemaParser';\nimport CustomSelect from './CustomSelect';\nimport dotProp from 'dot-prop';\n\nimport * as SchemaValidator from './util/SchemaValidator';\n\nconst Option = Select.Option;\nconst { Panel } = Collapse;\nconst ButtonGroup = Button.Group;\n\nconst formItemLayout = {\n  style: { marginBottom: 4 },\n  wrapperCol: { span: 22 },\n};\n\nconst nestedFormItemLayout = {\n  style: { marginBottom: 4 },\n  wrapperCol: { span: 24 },\n};\n\nfunction _humanize(text) {\n  text = text.replace(/_/g, ' ');\n  return text[0].toUpperCase() + text.substr(1);\n}\n\nfunction mapArrayItemToSelect(field, item, attrs) {\n  let options = null;\n  if (!!item.enum) {\n    attrs.initialValue = item.default;\n    options = item.enum.map(e => (\n      <Option key={e} value={e}>\n        {_humanize(e)}\n      </Option>\n    ));\n  } else {\n    attrs.initialValue = item.default;\n    field.enableCustom = true;\n  }\n\n  return (\n    <Select mode={field.enableCustom ? 'tags' : 'multiple'}>{options}</Select>\n  );\n}\n\nfunction arrayHasElementsRecursive(arr) {\n  return arr instanceof Array\n    ? arr\n        .map(e => !!e || (arr instanceof Array && arrayHasElementsRecursive(e)))\n        .filter(e => e).length > 0\n    : !!arr;\n}\n\nfunction getDescriptionText(field) {\n  return (\n    field.description +\n    `\\n\\n|||\\n|---------|---|\\n|&nbsp;**Default:**&nbsp;|${\n      field.default\n    }|\\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Path:**&nbsp;|${field.path}|`\n  );\n}\n\nclass ConfigurationForm extends React.Component {\n  state = {};\n\n  _createFormField(form, config, field, nested = false) {\n    const { getFieldDecorator } = form;\n    const validationRule = { required: field.isRequired };\n    const attrs = {};\n    attrs.initialValue =\n      field.default === undefined || field.default === null\n        ? ''\n        : field.default;\n\n    let element;\n    let title = field.title;\n    let decoratorProps = field.decoratorProps || {};\n\n    switch (field.type) {\n      case 'number':\n      case 'integer':\n        const numberProps = {};\n        validationRule.type = 'number';\n        if (field.minimum !== undefined) {\n          numberProps.min = field.minimum;\n          validationRule.min = field.minimum;\n        }\n        if (field.maximum !== undefined) {\n          numberProps.max = field.maximum;\n          validationRule.max = field.maximum;\n        }\n        element = <InputNumber {...numberProps} />;\n        break;\n      case 'array':\n        let item = field.items;\n        if (item instanceof Array) {\n          if (item.length > 1) {\n            return (\n              <Collapse key={field.$id}>\n                <Panel key={field.path} header={field.title}>\n                  {item.map((child, index) =>\n                    this._createFormField(\n                      form,\n                      config,\n                      { ...child, path: field.path + `[${index}]` },\n                      true\n                    )\n                  )}\n                </Panel>\n              </Collapse>\n            );\n          } else {\n            element = mapArrayItemToSelect(field, item[0], attrs);\n          }\n        } else {\n          element = mapArrayItemToSelect(field, item, attrs);\n        }\n        break;\n      case 'boolean':\n        title = '';\n        const fieldValue = form.getFieldValue(field.path);\n        const showReset =\n          fieldValue !== undefined &&\n          (field.default !== fieldValue || form.isFieldTouched(field.path));\n\n        decoratorProps.valuePropName = 'checked';\n        element = (\n          <Checkbox>\n            {field.title}&nbsp;\n            <Popover\n              content={\n                <div>\n                  <ReactMarkdown source={getDescriptionText(field)} />\n                  {showReset ? (\n                    <Button\n                      onClick={() => form.resetFields([field.path])}\n                      type=\"link\"\n                    >\n                      Reset\n                    </Button>\n                  ) : null}\n                </div>\n              }\n              title=\"Documentation\"\n              placement=\"topLeft\"\n            >\n              <Icon style={{ cursor: 'pointer' }} type=\"question-circle\" />\n            </Popover>\n          </Checkbox>\n        );\n        break;\n      case 'string':\n        if (!!field.enum) {\n          const selectOptions = field.enum.map(e => (\n            <Option key={e} value={e}>\n              {_humanize(e)}\n            </Option>\n          ));\n          element = field.enableCustom ? (\n            <CustomSelect>{selectOptions}</CustomSelect>\n          ) : (\n            <Select>{selectOptions}</Select>\n          );\n        } else {\n          element = <Input />;\n        }\n        break;\n      case 'object':\n        title = '';\n        return (\n          <Collapse>\n            <Panel key={field.path} header={field.title}>\n              {Object.entries(field.properties).map(child =>\n                this._createFormField(\n                  form,\n                  config,\n                  { ...child[1], path: field.path + `.${child[0]}` },\n                  true\n                )\n              )}\n            </Panel>\n          </Collapse>\n        );\n      default:\n        element = <Input />;\n    }\n\n    if (field.pattern) {\n      validationRule.pattern = field.pattern;\n    }\n\n    const fieldValue = form.getFieldValue(field.path);\n    const showReset =\n      fieldValue !== undefined &&\n      (field.default !== fieldValue || form.isFieldTouched(field.path));\n    return (\n      <Form.Item\n        key={field.path}\n        label={\n          field.description && title ? (\n            <span>\n              {title}&nbsp;\n              <Popover\n                content={\n                  <div>\n                    <ReactMarkdown source={getDescriptionText(field)} />\n                    {showReset ? (\n                      <Button\n                        onClick={() => form.resetFields([field.path])}\n                        type=\"link\"\n                      >\n                        Reset\n                      </Button>\n                    ) : null}\n                  </div>\n                }\n                title=\"Documentation\"\n                placement=\"topLeft\"\n              >\n                <Icon style={{ cursor: 'pointer' }} type=\"question-circle\" />\n              </Popover>\n            </span>\n          ) : (\n            title\n          )\n        }\n        {...(nested ? nestedFormItemLayout : formItemLayout)}\n      >\n        {getFieldDecorator(field.path, {\n          rules: [validationRule],\n          ...attrs,\n          ...decoratorProps,\n        })(element)}\n      </Form.Item>\n    );\n  }\n\n  _elementHasErrors = (form, config) => {\n    return config.elements\n      .map(element => {\n        const paths = !!config.getFieldPaths\n          ? config.getFieldPaths(form, element)\n          : element.path;\n        return (paths instanceof Array ? paths : [paths])\n          .map(path => {\n            return this.props.form.getFieldError(path);\n          })\n          .filter(e => !!e)\n          .map(errors => arrayHasElementsRecursive(errors))\n          .reduce((acc, val) => acc || val, false);\n      })\n      .reduce((val, acc) => val || acc, false);\n  };\n\n  _mapConfigurationToElement = (form, config, nested = false) => {\n    const showKey = 'show_' + config.id;\n    const isVisible = !config.showEnable || this.state[showKey];\n\n    // this has huge potential for bugs. Let's keep it this way\n    const hasErrors = this._elementHasErrors(form, config);\n    if (hasErrors && false) {\n      console.log(\n        'Has errors',\n        config,\n        config.elements.map(element =>\n          this.props.form.getFieldError(element.path)\n        )\n      );\n    }\n\n    return (\n      <Panel\n        header={\n          hasErrors ? (\n            <span style={{ color: 'red' }}>{config.title}</span>\n          ) : (\n            config.title\n          )\n        }\n        key={config.title}\n      >\n        {config.description && <ReactMarkdown source={config.description} />}\n        {config.showEnable ? (\n          <Checkbox keyName={showKey} onChange={this.handleCheckboxChange}>\n            Enable\n          </Checkbox>\n        ) : null}\n\n        {isVisible\n          ? !!config.render\n            ? config.render(form, config)\n            : config.elements.map(e =>\n                this._createFormField(form, config, e, nested)\n              )\n          : null}\n\n        {isVisible && config.children.length ? (\n          <Collapse>\n            {config.children.map(child =>\n              this._mapConfigurationToElement(form, child, true)\n            )}\n          </Collapse>\n        ) : null}\n      </Panel>\n    );\n  };\n\n  handleCheckboxChange = evt => {\n    const state = {};\n    state[evt.target.keyName] = evt.target.checked;\n    this.setState(state, () => {\n      this.props.form.setFieldsValue({});\n    });\n  };\n\n  render() {\n    const { form } = this.props;\n    return (\n      <div>\n        {/*<Button onClick={() => form.validateFields()}>Validate</Button>*/}\n        <h1 className=\"header-margin\">Configuration</h1>\n        <Form layout=\"vertical\">\n          <Collapse bordered={false}>\n            {this.props.formConfig.map(field =>\n              this._mapConfigurationToElement(form, field)\n            )}\n          </Collapse>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({\n  name: 'register',\n  onValuesChange: (props, changedValues, allValues) =>\n    props.onValuesChange\n      ? props.onValuesChange(changedValues, allValues)\n      : null,\n  onFieldsChange: (props, fields, allFields) =>\n    props.onFieldsChange\n      ? props.onFieldsChange(props, fields, allFields)\n      : null,\n})(ConfigurationForm);\n\nexport default class MainContent extends Component<> {\n  state = {\n    configString: '{}',\n    importModalVisible: false,\n    validateModalVisible: false,\n    importErrors: [],\n    jsonToImportString: '',\n    jsonToImport: {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.formRef = null;\n    this.formConfig = SchemaParser.parseSchema();\n  }\n\n  _onFieldsChange = debounce((props, fields, allFields) => {\n    // console.log('OnFieldsChange', props, fields, allFields);\n    this.setState({\n      configString: JSON.stringify(\n        mapFieldsToConfig(\n          props.form,\n          fields,\n          allFields,\n          this.formConfig,\n          path => dotProp.has(this.state.jsonToImport, path)\n        ),\n        null,\n        2\n      ),\n    });\n  }, 300);\n\n  _importBtnPress = () => {\n    this.setState({ importModalVisible: true });\n  };\n\n  _dirtyAppendersHackTransform = jsonConfig => {\n    return jsonConfig.Logging[0].appenders.reduce((acc, value) => {\n      acc[value.class] = { enabled: true, ...value };\n      return acc;\n    }, {});\n  };\n\n  _getValidationErrors(jsonObj) {\n    const validationResult = SchemaValidator.validate(jsonObj);\n    // console.log(validationResult);\n    if (validationResult.errors.length) {\n      return validationResult.errors.map(e => e.stack.replace('instance.', ''));\n    }\n\n    this.setState({ importErrors: [] });\n    return [];\n  }\n\n  _handleImportOk = () => {\n    let jsonToImport;\n    let loggingHack;\n    try {\n      jsonToImport = JSON.parse(this.state.jsonToImportString);\n      // lowercase log level enums - dirty hack at its best\n      if (!!jsonToImport.Logging) {\n        jsonToImport.Logging = jsonToImport.Logging.map(L => ({\n          ...L,\n          appenders: L.appenders.map(a => ({\n            ...a,\n            level: a.level.toLowerCase(),\n          })),\n        }));\n      }\n      loggingHack = this._dirtyAppendersHackTransform(jsonToImport);\n    } catch (e) {\n      this.setState({ importErrors: [e.message] });\n      return;\n    }\n\n    const errorList = this._getValidationErrors(jsonToImport);\n    this.setState({ importErrors: errorList });\n\n    // setting mapped value - dirty hack\n    jsonToImport.Logging = loggingHack;\n\n    if (errorList.length) {\n      return;\n    }\n\n    this.setState({ jsonToImport });\n    // console.log('Json to import', jsonToImport);\n    this.formRef.props.form.setFieldsValue(jsonToImport);\n    this.formRef.props.form.validateFields();\n    this.setState({ importModalVisible: false });\n  };\n\n  _handleImportCancel = () => {\n    this.setState({ importModalVisible: false });\n  };\n\n  _showValidation = () => {\n    const config = JSON.parse(this.state.configString);\n    this.formRef.props.form.validateFields();\n    const errorList = this._getValidationErrors(config);\n\n    if (errorList.length) {\n      Modal.error({\n        title: 'Validation',\n        width: 800,\n        content: (\n          <div>\n            {errorList.map((err, index) => (\n              <Alert\n                key={'error' + index}\n                style={{ marginBottom: 4 }}\n                message={err}\n                type=\"error\"\n                showIcon\n              />\n            ))}\n          </div>\n        ),\n      });\n    } else {\n      Modal.success({\n        title: 'Validation',\n        content: 'SDK JSON configuration is valid',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col span={8}>\n          <ButtonGroup>\n            <Button type=\"primary\" onClick={this._importBtnPress}>\n              Import configuration\n            </Button>\n            <Button onClick={this._showValidation}>Validate</Button>\n          </ButtonGroup>\n          <WrappedRegistrationForm\n            wrappedComponentRef={inst => (this.formRef = inst)}\n            formConfig={this.formConfig}\n            onFieldsChange={this._onFieldsChange}\n          />\n        </Col>\n        <Col offset={1} span={15}>\n          <pre>{this.state.configString}</pre>\n        </Col>\n\n        <Modal\n          title=\"Config Import\"\n          width={700}\n          visible={this.state.importModalVisible}\n          onOk={this._handleImportOk}\n          onCancel={this._handleImportCancel}\n        >\n          {this.state.importErrors.map((err, index) => (\n            <Alert\n              key={'error' + index}\n              style={{ marginBottom: 4 }}\n              message={err}\n              type=\"error\"\n              showIcon\n            />\n          ))}\n          <Input.TextArea\n            rows={25}\n            value={this.state.jsonToImportString}\n            onChange={evt =>\n              this.setState({ jsonToImportString: evt.target.value })\n            }\n          />\n        </Modal>\n        <Modal\n          title=\"Validation report\"\n          width={700}\n          visible={this.state.validateModalVisible}\n          onOk={() => this.setState({ validateModalVisible: false })}\n        >\n          {this.state.importErrors.map((err, index) => (\n            <Alert\n              key={'error' + index}\n              style={{ marginBottom: 4 }}\n              message={err}\n              type=\"error\"\n              showIcon\n            />\n          ))}\n        </Modal>\n      </Row>\n    );\n  }\n}\n","import React from 'react';\nimport { Col, Layout, Row } from 'antd';\nimport 'antd/dist/antd.css';\nimport MainContent from \"./components/MainContent\";\n\nconst { Header, Sider, Content } = Layout;\n\n\nfunction App() {\n  return (\n    <Layout>\n      <Header style={{ background: '#ed1b2f' }}>\n        <Row>\n          <Col span={2}>\n            <img\n              alt=\"Sygic\"\n              src=\"https://intranet.sygic.com/assets/images/logo.svg\"\n              style={{ display: 'inline' }}\n            />\n          </Col>\n          <Col span={22}>\n            <h1 style={{ color: 'white' }}>SDK Configuration</h1>\n          </Col>\n        </Row>\n      </Header>\n      <Layout style={{ background: 'white' }}>\n        <Sider style={{ background: 'white' }} />\n        <Content style={{ margin: 20 }}>\n          <MainContent />\n        </Content>\n        <Sider style={{ background: 'white' }} />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}