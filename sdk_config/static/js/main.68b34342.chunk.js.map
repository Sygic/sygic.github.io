{"version":3,"sources":["components/util/MappingUtil.js","components/util/SchemaParser.js","components/CustomSelect.js","components/util/SchemaValidator.js","components/LoggerConfig.js","components/GuiConfiguration.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["_mapFieldsFromConfig","config","allFields","isImported","fieldList","_mapConfigToFields","flatMap","c","concat","Object","toConsumableArray","elements","children","obj","create","forEach","element","field","dotProp","get","path","resolved","valueResolver","undefined","shouldSet","set","value","touched","Array","find","e","map","mapFieldsToConfig","form","fields","formConfig","_filterKeys","keyList","filter","excludeFilter","filterList","replace","excludeFilterList","length","key","filterIndex","match","_processElement","schema","$ref","split","slice","join","anyOf","allOf","allOfArr","reduce","acc","val","DeepMerge","_mergeAllOf","type","items","properties","entries","pair","_mapToSchemaPropsPath","_isFieldRequired","schemaProperties","console","error","lastIndex","lastIndexOf","props","substring","elementName","required","indexOf","noOp","SchemaParser","guiConfig","_parseProperties","pathPrefix","retArr","keys","property","push","index","_addElementsToConfig","id","objectSpread","excludeKeys","elementTransform","isRequired","child","Option","Select","CustomSelect","state","searchTerm","onSearch","_this","setState","onChange","options","react_default","a","createElement","this","es_select","assign","showSearch","defaultActiveFirstOption","showArrow","filterOption","Component","validator","Validator","Panel","Collapse","formItemLayout","_createFormField","getFieldDecorator","es_form","Item","name","label","decoratorProps","initialValue","rules","VISIBLE_LOG_APPENDERS","CreateAppenderConfig","appenders","$id","propElement","title","enabled","getFieldValue","collapse","header","react_markdown_default","source","description","valuePropName","es_checkbox","style","display","parent","retObj","popover","content","placement","default","const","input_number","min","enum","placeholder","LoggerConfig_Option","input","disabled","requiredRule","substr","_mapElementToConfig","GuiConfiguration","Audio.SoundSettings.speedcam_warn_sound","enableCustom","Audio.SoundSettings.danger_turn_notif_sound","Audio.SoundSettings.speed_limit_warn_sound","Audio.SoundSettings.warn_near_rail_sound","Audio.SoundSettings.traffic_notif_sound","Audio.SoundSettings.scout_route_notif_sound","Audio.SoundSettings.last_mile_notif_sound","Logging","mappedField","classpath","mapped","appender","_mapToJson","getFieldPaths","appenderElement","parentPath","render","ButtonGroup","Button","Group","marginBottom","wrapperCol","span","nestedFormItemLayout","_humanize","text","toUpperCase","mapArrayItemToSelect","item","attrs","log","MainContent_Option","mode","getDescriptionText","ConfigurationForm","_elementHasErrors","paths","getFieldError","errors","arrayHasElementsRecursive","arr","_mapConfigurationToElement","nested","arguments","showKey","isVisible","showEnable","hasErrors","MainContent_Panel","color","keyName","handleCheckboxChange","evt","target","checked","setFieldsValue","_this2","validationRule","numberProps","minimum","maximum","max","fieldValue","showReset","isFieldTouched","es_button","onClick","resetFields","icon","cursor","selectOptions","CustomSelect_CustomSelect","pattern","_this3","className","layout","bordered","React","WrappedConfigurationForm","Form","onValuesChange","changedValues","allValues","onFieldsChange","MainContent","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","configString","importModalVisible","validateModalVisible","importErrors","jsonToImportString","jsonToImport","isSchema14Used","copied","_onFieldsChange","debounce","JSON","stringify","has","_importBtnPress","_dirtyAppendersHackTransform","jsonConfig","class","_handleImportOk","loggingHack","parse","L","level","toLowerCase","message","errorList","_getValidationErrors","formRef","validateFields","_handleImportCancel","_showValidation","Modal","width","err","es_alert","showIcon","success","Schema14","Schema15","jsonObj","validationResult","validate","base","stack","_this5","row","col","navigator","clipboard","writeText","theme","twoToneColor","wrappedComponentRef","inst","offset","modal","visible","onOk","onCancel","TextArea","rows","Header","Layout","Sider","Content","App","background","alt","src","process","margin","MainContent_MainContent","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68b34342.chunk.js","sourcesContent":["import dotProp from 'dot-prop';\n\nfunction _mapConfigToFields(config) {\n  return config.flatMap(c => {\n    return [...c.elements, ..._mapConfigToFields(c.children)];\n  });\n}\n\nfunction _mapFieldsFromConfig(config, allFields, isImported) {\n  const fieldList = _mapConfigToFields(config);\n  // console.log(fieldList);\n  const obj = Object.create(null);\n  fieldList.forEach(element => {\n    const field = dotProp.get(allFields, element.path);\n    // This is stupid, but well, this is javascript\n    const resolved = !!element.valueResolver\n      ? element.valueResolver(field)\n      : undefined;\n    if (!!resolved && resolved.shouldSet) {\n      // console.log(resolved.path, 'setting value', resolved.value);\n      dotProp.set(obj, resolved.path, resolved.value);\n    } else if (!!field && (!!field.touched || isImported(element.path))) {\n      // console.log(element.path, 'setting value', field.value);\n      if (field.value !== undefined && field.value !== null) {\n        dotProp.set(obj, element.path, field.value);\n      }\n    } else {\n      if (field instanceof Array && !element.valueResolver) {\n        const touched = field.find(e => !!e.touched);\n        // console.log(field, touched);\n        if (!!touched) {\n          dotProp.set(obj, element.path, field.map(e => e.value));\n        }\n      }\n\n      // console.log(\n      //   'rejected',\n      //   (resolved || element || { path: 'no_path' }).path,\n      //   field,\n      //   element\n      // );\n    }\n  });\n  // console.log(obj);\n  return obj;\n}\n\nexport function mapFieldsToConfig(\n  form,\n  fields,\n  allFields,\n  formConfig,\n  isImported\n) {\n  return _mapFieldsFromConfig(formConfig, allFields, isImported);\n}\n","import dotProp from 'dot-prop';\nimport * as DeepMerge from 'deepmerge';\n\nfunction _parseProperties(schema, pathPrefix) {\n  const props = schema.properties;\n  let retArr = [];\n  Object.keys(props).forEach(key => {\n    const property = props[key];\n    const path = pathPrefix === '' ? key : pathPrefix + '.' + key;\n    // console.log(key, property);\n    if (property.type === 'object') {\n      retArr = retArr.concat(_parseProperties(property, path));\n    } else {\n      retArr.push(path);\n    }\n  });\n  return retArr;\n}\n\nfunction _filterKeys(keyList, filter, excludeFilter) {\n  const filterList = (filter instanceof Array\n    ? filter\n    : filter\n      ? [filter]\n      : []\n  ).map(e => {\n    return e.replace(/\\./, '\\\\.').replace(/\\*/, '.+?');\n  });\n  const excludeFilterList = (excludeFilter instanceof Array\n    ? excludeFilter\n    : excludeFilter\n      ? [excludeFilter]\n      : []\n  ).map(e => {\n    return e.replace(/\\./, '\\\\.').replace(/\\*/, '.+?');\n  });\n\n  if (!filterList.length && !excludeFilterList.length) {\n    return [];\n  }\n\n  return keyList.filter(key => {\n    for (const filterIndex in excludeFilterList) {\n      if (key.match(excludeFilterList[filterIndex])) {\n        return false;\n      }\n    }\n\n    for (const filterIndex in filterList) {\n      if (key.match(filterList[filterIndex])) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\nfunction _mergeAllOf(schema, allOfArr) {\n  return _processElement(schema,\n    allOfArr\n      .map(e => _processElement(schema, e))\n      .reduce((acc, val) => DeepMerge(acc, val), Object.create(null))\n  );\n}\n\nfunction _processElement(schema, element) {\n  if (element === undefined || element === null) {\n    return element;\n  }\n\n  if (!!element.$ref) {\n    const split = element.$ref.split('/');\n    return dotProp.get(schema, split.slice(1).join('.'));\n  }\n  if (!!element.anyOf && element.anyOf instanceof Array) {\n    return { anyOf: element.anyOf.map(e => _processElement(schema, e)) };\n  }\n\n  // console.log('Processing element', element);\n  if (!!element.allOf) {\n    return _mergeAllOf(schema, element.allOf);\n  }\n\n  if (element.type === 'array' && !!element.items) {\n    // console.log('------>', element.$id, element);\n    const items = element.items;\n    if (items instanceof Array) {\n      element.items = items.map(e => _processElement(schema, e));\n    } else {\n      element.items = _processElement(schema, items);\n    }\n  }\n\n  if (element.type === 'object' && !!element.properties) {\n    Object.entries(element.properties).forEach(pair => {\n      element.properties[pair[0]] = _processElement(schema, pair[1]);\n    });\n  }\n\n  return element;\n}\n\nfunction _mapToSchemaPropsPath(path: String) {\n  return path.split('.').join('.properties.');\n}\n\nfunction _isFieldRequired(schemaProperties, path) {\n  if (!path) {\n    console.error('Missing path!');\n    return false;\n  }\n  const lastIndex = path.lastIndexOf('.');\n  const props = dotProp.get(\n    schemaProperties,\n    _mapToSchemaPropsPath(path.substring(0, lastIndex))\n  );\n  if (!props) {\n    return false;\n  }\n  const elementName = path.substring(lastIndex + 1);\n  return !!props.required && props.required.indexOf(elementName) !== -1;\n}\n\nfunction noOp(e) {\n  return e;\n}\n\nfunction _addElementsToConfig(schema, keyList, config, id) {\n  return {\n    id,\n    ...config,\n    elements: _filterKeys(keyList, config.keys, config.excludeKeys)\n      .map(path => ({\n        ...dotProp.get(schema.properties, _mapToSchemaPropsPath(path)),\n        path,\n      }))\n      .flatMap(config.elementTransform ? config.elementTransform : noOp)\n      .map(element => ({\n        ..._processElement(schema, element),\n        path: element.path,\n        isRequired: _isFieldRequired(schema.properties, element.path),\n        ...(!!config.props ? config.props[element.path] : undefined),\n      })),\n    children: (config.children || []).map((child, index) =>\n      _addElementsToConfig(schema, keyList, child, `${id}.${index}`)\n    ),\n  };\n}\n\nexport default {\n  parseSchema: (schema, guiConfig) => {\n    // console.log(schema.properties);\n    const keyList = _parseProperties(schema, '');\n    // console.log(elements);\n    return guiConfig.map((config, index) =>\n      _addElementsToConfig(schema, keyList, config, index)\n    );\n  },\n};\n","import React, { Component } from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default class CustomSelect extends Component {\n  state = {\n    searchTerm: '',\n  };\n\n  onSearch = value => {\n    this.setState({ searchTerm: value });\n  };\n\n  onChange = value => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      <Option key={this.state.searchTerm} value={this.state.searchTerm}>\n        {this.state.searchTerm}\n      </Option>,\n      this.props.children,\n    ];\n    return (\n      <Select\n        {...this.props}\n        showSearch\n        defaultActiveFirstOption={false}\n        showArrow={true}\n        filterOption={true}\n        onSearch={this.onSearch}\n        onChange={this.onChange}\n      >\n        {options}\n      </Select>\n    );\n  }\n}\n","import { Validator } from 'jsonschema';\n\nconst validator = new Validator();\n\nexport function validate(obj, schema) {\n  return validator.validate(obj, schema, { base: '' });\n}\n","import React from 'react';\nimport {\n  Checkbox,\n  Collapse,\n  Form,\n  Input,\n  InputNumber,\n  Popover,\n  Select,\n} from 'antd';\nimport ReactMarkdown from 'react-markdown';\n\nconst { Panel } = Collapse;\nconst { Option } = Select;\nconst formItemLayout = {};\n\nfunction _mapElementToConfig(key, element, parent) {\n  const retObj = {\n    name: key,\n    label: element.description ? (\n      <Popover\n        content={element.description}\n        title=\"Documentation\"\n        placement=\"topLeft\"\n      >\n        {element.title}\n      </Popover>\n    ) : (\n      element.title\n    ),\n    initialValue: element.default || element.const,\n  };\n  if (element.type === 'boolean') {\n    retObj.decoratorProps = {\n      valuePropName: 'checked',\n    };\n    retObj.label = '';\n    retObj.element = <Checkbox>{element.title}</Checkbox>;\n  }\n\n  if (element.type === 'number' || element.type === 'integer') {\n    retObj.element = <InputNumber min={0} />;\n  }\n\n  if (!!element.enum) {\n    retObj.element = (\n      <Select placeholder=\"Please select\">\n        {element.enum.map(e => (\n          <Option key={e} value={e}>\n            {e}\n          </Option>\n        ))}\n      </Select>\n    );\n  } else if (element.type === 'string') {\n    retObj.element = <Input disabled={!!element.const} />;\n  }\n\n  const requiredRule = {};\n  requiredRule.required =\n    !!parent.required &&\n    parent.required.indexOf(key.substr(key.lastIndexOf('.') + 1)) !== -1;\n  retObj.rules = [requiredRule];\n  return retObj;\n}\n\nconst _createFormField = (getFieldDecorator, field) => {\n  return (\n    <Form.Item key={field.name} label={field.label} {...formItemLayout}>\n      {getFieldDecorator(field.name, {\n        ...field.decoratorProps,\n        initialValue: field.initialValue,\n        rules: field.rules,\n      })(field.element)}\n    </Form.Item>\n  );\n};\n\nconst VISIBLE_LOG_APPENDERS = [\n  'DiagnosticsAppender',\n  'TelemetryAppender',\n  'CFileAppender',\n  'CConsoleAppender',\n];\n\nexport function CreateAppenderConfig(form, config) {\n  // console.log(config);\n  const { getFieldDecorator } = form;\n  const element = config.elements[0];\n  const props = element.items.properties.appenders;\n  // console.log('fffff', props, props.items.anyOf);\n  return props.items.anyOf\n    .filter(\n      e => VISIBLE_LOG_APPENDERS.indexOf(e.$id.split('/').slice(-1)[0]) !== -1\n    )\n    .map(propElement => {\n      // console.log(propElement.title);\n      const path = element.path + '.' + propElement.title;\n      const enabled = !!form.getFieldValue(path + '.enabled');\n      return (\n        <Collapse key={path}>\n          <Panel key={path + '_panel'} header={propElement.title}>\n            <ReactMarkdown source={propElement.description} />\n\n            {_createFormField(getFieldDecorator, {\n              name: path + '.enabled',\n              rules: [],\n              label: '',\n              decoratorProps: {\n                valuePropName: 'checked',\n              },\n              element: <Checkbox>Enable</Checkbox>,\n            })}\n            <div style={{ display: enabled ? 'block' : 'none' }}>\n              {Object.entries(propElement.properties).map(pair => {\n                // console.log(pair);\n                return _createFormField(\n                  getFieldDecorator,\n                  _mapElementToConfig(\n                    path + '.' + pair[0],\n                    pair[1],\n                    propElement\n                  )\n                );\n              })}\n            </div>\n          </Panel>\n        </Collapse>\n      );\n    });\n}\n\nfunction _mapToJson(appender) {\n  if (!appender || !appender.enabled.value) {\n    return null;\n  }\n  const retObj = Object.create(null);\n  Object.entries(appender).forEach(pair => {\n    if (pair[0] === 'enabled') {\n      return;\n    }\n    retObj[pair[0]] = pair[1].value;\n  });\n  return retObj;\n}\n\nexport function AppenderValueResolver(field) {\n  const mappedField = [\n    {\n      name: 'global',\n      classpath: '',\n      appenders: [],\n    },\n  ];\n\n  Object.entries(field).forEach(pair => {\n    const mapped = _mapToJson(pair[1]);\n    if (!!mapped) {\n      mappedField[0].appenders.push(mapped);\n    }\n  });\n  return {\n    shouldSet: true,\n    path: 'Logging',\n    value: mappedField,\n  };\n}\n","import { AppenderValueResolver, CreateAppenderConfig } from './LoggerConfig';\n\nconst GuiConfiguration = [\n  {\n    title: 'Licence',\n    description: 'Licence configuration information.',\n    keys: '^Authentication.*',\n  },\n  {\n    title: 'Online Services',\n    description: 'Configuration for online aspects of the SDK',\n    keys: ['^Online.General'],\n\n    children: [\n      {\n        title: 'Routing',\n        keys: '^Online.Routing.*',\n      },\n      {\n        title: 'Search',\n        keys: '^Online.Search.*',\n      },\n      {\n        title: 'SpeedCameras',\n        keys: '^SpeedCameras.*',\n      },\n      {\n        title: 'Incidents',\n        keys: '^Incidents.*',\n      },\n    ],\n  },\n  {\n    title: 'Storage',\n    keys: '^StorageFolders.*',\n  },\n  {\n    title: 'Routing',\n    keys: '^Routing.*',\n  },\n  {\n    title: 'Navigation',\n    keys: '^Navigation.WarningSettings.*',\n  },\n  {\n    title: 'Audio',\n    children: [\n      {\n        title: 'General',\n        keys: '^Audio.SoundSettings.*',\n        excludeKeys: ['^Audio.SoundSettings.tts_*'],\n        props: {\n          'Audio.SoundSettings.speedcam_warn_sound': { enableCustom: true },\n          'Audio.SoundSettings.danger_turn_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.speed_limit_warn_sound': { enableCustom: true },\n          'Audio.SoundSettings.warn_near_rail_sound': { enableCustom: true },\n          'Audio.SoundSettings.traffic_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.scout_route_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.last_mile_notif_sound': { enableCustom: true },\n        },\n      },\n      {\n        title: 'TTS',\n        keys: '^Audio.SoundSettings.tts_*',\n      },\n    ],\n  },\n  {\n    title: 'Drivers Behaviour',\n    keys: '^DriversBehavior.enable',\n    children: [\n      {\n        title: 'Configuration',\n        keys: '^DriversBehavior.*',\n        excludeKeys: '^DriversBehavior.enable',\n      },\n    ],\n  },\n  {\n    title: 'Logging',\n    keys: '^Logging',\n    props: {\n      Logging: {\n        valueResolver: AppenderValueResolver,\n      },\n    },\n    getFieldPaths: (form, element) => {\n      return element.items.properties.appenders.items.anyOf\n        .filter(\n          appenderElement =>\n            !!form.getFieldValue(\n              element.path + '.' + appenderElement.title + '.enabled'\n            )\n        )\n        .map(appenderElement => ({\n          parentPath: element.path + '.' + appenderElement.title,\n          elements: Object.entries(appenderElement.properties),\n        }))\n        .flatMap(e => e.elements.map(pair => e.parentPath + '.' + pair[0]));\n    },\n    render: (form, config) => CreateAppenderConfig(form, config),\n  },\n];\n\nexport default GuiConfiguration;\n","import React, { Component } from 'react';\nimport {\n  Alert,\n  Button,\n  Checkbox,\n  Col,\n  Collapse,\n  Form,\n  Icon,\n  Input,\n  InputNumber,\n  Modal,\n  Row,\n  Popover,\n  Select,\n} from 'antd';\nimport { debounce } from 'debounce';\nimport ReactMarkdown from 'react-markdown';\nimport '../App.css';\nimport { mapFieldsToConfig } from './util/MappingUtil';\n\nimport SchemaParser from './util/SchemaParser';\nimport CustomSelect from './CustomSelect';\nimport dotProp from 'dot-prop';\n\nimport * as SchemaValidator from './util/SchemaValidator';\nimport GuiConfiguration from './GuiConfiguration';\n\nimport { default as Schema14 } from '../schema_14x';\nimport { default as Schema15 } from '../schema_15x';\n\nconst Option = Select.Option;\nconst { Panel } = Collapse;\nconst ButtonGroup = Button.Group;\n\nconst formItemLayout = {\n  style: { marginBottom: 4 },\n  wrapperCol: { span: 22 },\n};\n\nconst nestedFormItemLayout = {\n  style: { marginBottom: 4 },\n  wrapperCol: { span: 24 },\n};\n\nfunction _humanize(text) {\n  if (!text) {\n    return text;\n  }\n  text = text.replace(/_/g, ' ');\n  return text[0].toUpperCase() + text.substr(1);\n}\n\nfunction mapArrayItemToSelect(field, item, attrs) {\n  console.log(field);\n  let options = null;\n  if (!!item.enum) {\n    attrs.initialValue = item.default;\n    options = item.enum.map(e => (\n      <Option key={e} value={e}>\n        {_humanize(e)}\n      </Option>\n    ));\n  } else {\n    attrs.initialValue = item.default;\n    field.enableCustom = true;\n  }\n\n  return (\n    <Select mode={field.enableCustom ? 'tags' : 'multiple'}>{options}</Select>\n  );\n}\n\nfunction arrayHasElementsRecursive(arr) {\n  return arr instanceof Array\n    ? arr\n        .map(e => !!e || (arr instanceof Array && arrayHasElementsRecursive(e)))\n        .filter(e => e).length > 0\n    : !!arr;\n}\n\nfunction getDescriptionText(field) {\n  return (\n    field.description +\n    `\\n\\n|||\\n|---------|---|\\n|&nbsp;**Default:**&nbsp;|${\n      field.default\n    }|\\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Path:**&nbsp;|${field.path}|`\n  );\n}\n\nclass ConfigurationForm extends React.Component {\n  state = {};\n\n  _createFormField(form, config, field, nested = false) {\n    const { getFieldDecorator } = form;\n    const validationRule = { required: field.isRequired };\n    const attrs = {};\n    attrs.initialValue =\n      field.default === undefined || field.default === null\n        ? ''\n        : field.default;\n\n    let element;\n    let title = field.title;\n    let decoratorProps = field.decoratorProps || {};\n\n    switch (field.type) {\n      case 'number':\n      case 'integer':\n        const numberProps = {};\n        validationRule.type = 'number';\n        if (field.minimum !== undefined) {\n          numberProps.min = field.minimum;\n          validationRule.min = field.minimum;\n        }\n        if (field.maximum !== undefined) {\n          numberProps.max = field.maximum;\n          validationRule.max = field.maximum;\n        }\n        element = <InputNumber {...numberProps} />;\n        break;\n      case 'array':\n        let item = field.items;\n        if (item instanceof Array) {\n          if (item.length > 1) {\n            return (\n              <Collapse key={field.$id}>\n                <Panel key={field.path} header={field.title}>\n                  {item.map((child, index) =>\n                    this._createFormField(\n                      form,\n                      config,\n                      { ...child, path: field.path + `[${index}]` },\n                      true\n                    )\n                  )}\n                </Panel>\n              </Collapse>\n            );\n          } else {\n            element = mapArrayItemToSelect(field, item[0], attrs);\n          }\n        } else {\n          element = mapArrayItemToSelect(field, item, attrs);\n        }\n        break;\n      case 'boolean':\n        title = '';\n        const fieldValue = form.getFieldValue(field.path);\n        const showReset =\n          fieldValue !== undefined &&\n          (field.default !== fieldValue || form.isFieldTouched(field.path));\n\n        decoratorProps.valuePropName = 'checked';\n        element = (\n          <Checkbox>\n            {field.title}&nbsp;\n            <Popover\n              content={\n                <div>\n                  <ReactMarkdown source={getDescriptionText(field)} />\n                  {showReset ? (\n                    <Button\n                      onClick={() => form.resetFields([field.path])}\n                      type=\"link\"\n                    >\n                      Reset\n                    </Button>\n                  ) : null}\n                </div>\n              }\n              title=\"Documentation\"\n              placement=\"topLeft\"\n            >\n              <Icon style={{ cursor: 'pointer' }} type=\"question-circle\" />\n            </Popover>\n          </Checkbox>\n        );\n        break;\n      case 'string':\n        if (!!field.enum) {\n          const selectOptions = field.enum.map(e => (\n            <Option key={e} value={e}>\n              {_humanize(e)}\n            </Option>\n          ));\n          element = field.enableCustom ? (\n            <CustomSelect>{selectOptions}</CustomSelect>\n          ) : (\n            <Select>{selectOptions}</Select>\n          );\n        } else {\n          element = <Input />;\n        }\n        break;\n      case 'object':\n        title = '';\n        return (\n          <Collapse>\n            <Panel key={field.path} header={field.title}>\n              {Object.entries(field.properties).map(child =>\n                this._createFormField(\n                  form,\n                  config,\n                  { ...child[1], path: field.path + `.${child[0]}` },\n                  true\n                )\n              )}\n            </Panel>\n          </Collapse>\n        );\n      default:\n        element = <Input />;\n    }\n\n    if (field.pattern) {\n      validationRule.pattern = field.pattern;\n    }\n\n    const fieldValue = form.getFieldValue(field.path);\n    const showReset =\n      fieldValue !== undefined &&\n      (field.default !== fieldValue || form.isFieldTouched(field.path));\n    return (\n      <Form.Item\n        key={field.path}\n        label={\n          field.description && title ? (\n            <span>\n              {title}&nbsp;\n              <Popover\n                content={\n                  <div>\n                    <ReactMarkdown source={getDescriptionText(field)} />\n                    {showReset ? (\n                      <Button\n                        onClick={() => form.resetFields([field.path])}\n                        type=\"link\"\n                      >\n                        Reset\n                      </Button>\n                    ) : null}\n                  </div>\n                }\n                title=\"Documentation\"\n                placement=\"topLeft\"\n              >\n                <Icon style={{ cursor: 'pointer' }} type=\"question-circle\" />\n              </Popover>\n            </span>\n          ) : (\n            title\n          )\n        }\n        {...(nested ? nestedFormItemLayout : formItemLayout)}\n      >\n        {getFieldDecorator(field.path, {\n          rules: [validationRule],\n          ...attrs,\n          ...decoratorProps,\n        })(element)}\n      </Form.Item>\n    );\n  }\n\n  _elementHasErrors = (form, config) => {\n    return config.elements\n      .map(element => {\n        const paths = !!config.getFieldPaths\n          ? config.getFieldPaths(form, element)\n          : element.path;\n        return (paths instanceof Array ? paths : [paths])\n          .map(path => {\n            return this.props.form.getFieldError(path);\n          })\n          .filter(e => !!e)\n          .map(errors => arrayHasElementsRecursive(errors))\n          .reduce((acc, val) => acc || val, false);\n      })\n      .reduce((val, acc) => val || acc, false);\n  };\n\n  _mapConfigurationToElement = (form, config, nested = false) => {\n    const showKey = 'show_' + config.id;\n    const isVisible = !config.showEnable || this.state[showKey];\n\n    // this has huge potential for bugs. Let's keep it this way\n    const hasErrors = this._elementHasErrors(form, config);\n    if (hasErrors && false) {\n      console.log(\n        'Has errors',\n        config,\n        config.elements.map(element =>\n          this.props.form.getFieldError(element.path)\n        )\n      );\n    }\n\n    return (\n      <Panel\n        header={\n          hasErrors ? (\n            <span style={{ color: 'red' }}>{config.title}</span>\n          ) : (\n            config.title\n          )\n        }\n        key={config.title}\n      >\n        {config.description && <ReactMarkdown source={config.description} />}\n        {config.showEnable ? (\n          <Checkbox keyName={showKey} onChange={this.handleCheckboxChange}>\n            Enable\n          </Checkbox>\n        ) : null}\n\n        {isVisible\n          ? !!config.render\n            ? config.render(form, config)\n            : config.elements.map(e =>\n                this._createFormField(form, config, e, nested)\n              )\n          : null}\n\n        {isVisible && config.children.length ? (\n          <Collapse>\n            {config.children.map(child =>\n              this._mapConfigurationToElement(form, child, true)\n            )}\n          </Collapse>\n        ) : null}\n      </Panel>\n    );\n  };\n\n  handleCheckboxChange = evt => {\n    const state = {};\n    state[evt.target.keyName] = evt.target.checked;\n    this.setState(state, () => {\n      this.props.form.setFieldsValue({});\n    });\n  };\n\n  render() {\n    const { form } = this.props;\n    return (\n      <div>\n        {/*<Button onClick={() => form.validateFields()}>Validate</Button>*/}\n        <h1 className=\"header-margin\">Configuration</h1>\n        <Form layout=\"vertical\">\n          <Collapse bordered={true}>\n            {this.props.formConfig.map(field =>\n              this._mapConfigurationToElement(form, field)\n            )}\n          </Collapse>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedConfigurationForm = Form.create({\n  name: 'register',\n  onValuesChange: (props, changedValues, allValues) =>\n    props.onValuesChange\n      ? props.onValuesChange(changedValues, allValues)\n      : null,\n  onFieldsChange: (props, fields, allFields) =>\n    props.onFieldsChange\n      ? props.onFieldsChange(props, fields, allFields)\n      : null,\n})(ConfigurationForm);\n\nexport default class MainContent extends Component<> {\n  state = {\n    configString: '{}',\n    importModalVisible: false,\n    validateModalVisible: false,\n    importErrors: [],\n    jsonToImportString: '',\n    jsonToImport: {},\n    isSchema14Used: false,\n    copied: false,\n    formConfig: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.formRef = null;\n  }\n\n  componentDidMount(): void {\n    this.setState({\n      formConfig: SchemaParser.parseSchema(this.state.isSchema14Used ? Schema14 : Schema15, GuiConfiguration)\n    })\n  }\n\n  _onFieldsChange = debounce((props, fields, allFields) => {\n    // console.log('OnFieldsChange', props, fields, allFields);\n    this.setState({\n      copied: false,\n      configString: JSON.stringify(\n        mapFieldsToConfig(\n          props.form,\n          fields,\n          allFields,\n          this.state.formConfig,\n          path => dotProp.has(this.state.jsonToImport, path)\n        ),\n        null,\n        2\n      ),\n    });\n  }, 300);\n\n  _importBtnPress = () => {\n    this.setState({ importModalVisible: true });\n  };\n\n  _dirtyAppendersHackTransform = jsonConfig => {\n    return jsonConfig.Logging[0].appenders\n      .filter(\n        e =>\n          console.log(e) ||\n          [\n            'CConsoleAppender',\n            'CFileAppender',\n            'TelemetryAppender',\n            'DiagnosticsAppender',\n          ].indexOf(e['class']) !== -1\n      )\n      .reduce((acc, value) => {\n        acc[value.class] = { enabled: true, ...value };\n        return acc;\n      }, {});\n  };\n\n  _getValidationErrors(jsonObj) {\n    const validationResult = SchemaValidator.validate(jsonObj, this.state.isSchema14Used ? Schema14 : Schema15);\n    // console.log(validationResult);\n    if (validationResult.errors.length) {\n      return validationResult.errors.map(e => e.stack.replace('instance.', ''));\n    }\n\n    this.setState({ importErrors: [] });\n    return [];\n  }\n\n  _handleImportOk = () => {\n    let jsonToImport;\n    let loggingHack;\n    try {\n      jsonToImport = JSON.parse(this.state.jsonToImportString);\n      // lowercase log level enums - dirty hack at its best\n      if (!!jsonToImport.Logging) {\n        jsonToImport.Logging = jsonToImport.Logging.map(L => ({\n          ...L,\n          appenders: L.appenders.map(a => ({\n            ...a,\n            level: a.level.toLowerCase(),\n          })),\n        }));\n      }\n      loggingHack = this._dirtyAppendersHackTransform(jsonToImport);\n    } catch (e) {\n      this.setState({ importErrors: [e.message] });\n      return;\n    }\n\n    const errorList = this._getValidationErrors(jsonToImport);\n    this.setState({ importErrors: errorList });\n\n    // setting mapped value - dirty hack\n    jsonToImport.Logging = loggingHack;\n\n    if (errorList.length) {\n      return;\n    }\n\n    this.setState({ jsonToImport });\n    // console.log('Json to import', jsonToImport);\n    this.formRef.props.form.setFieldsValue(jsonToImport);\n    this.formRef.props.form.validateFields();\n    this.setState({ importModalVisible: false });\n  };\n\n  _handleImportCancel = () => {\n    this.setState({ importModalVisible: false });\n  };\n\n  _showValidation = () => {\n    const config = JSON.parse(this.state.configString);\n    this.formRef.props.form.validateFields();\n    const errorList = this._getValidationErrors(config);\n\n    if (errorList.length) {\n      Modal.error({\n        title: 'Validation',\n        width: 800,\n        content: (\n          <div>\n            {errorList.map((err, index) => (\n              <Alert\n                key={'error' + index}\n                style={{ marginBottom: 4 }}\n                message={err}\n                type=\"error\"\n                showIcon\n              />\n            ))}\n          </div>\n        ),\n      });\n    } else {\n      Modal.success({\n        title: 'Validation',\n        content: 'SDK JSON configuration is valid',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col span={9}>\n          <Checkbox />\n          <ButtonGroup>\n            <Button type=\"primary\" onClick={this._importBtnPress}>\n              Import configuration\n            </Button>\n            <Button onClick={this._showValidation}>Validate</Button>\n            <Button\n              onClick={() => {\n                navigator.clipboard.writeText(this.state.configString);\n                this.setState({ copied: true });\n              }}\n            >\n              {this.state.copied ? (\n                <span>\n                  <Icon\n                    type=\"check-circle\"\n                    theme=\"twoTone\"\n                    twoToneColor=\"#52c41a\"\n                  />{' '}\n                  Copied\n                </span>\n              ) : (\n                'Copy to Clipboard'\n              )}\n            </Button>\n          </ButtonGroup>\n          <WrappedConfigurationForm\n            wrappedComponentRef={inst => (this.formRef = inst)}\n            formConfig={this.state.formConfig}\n            onFieldsChange={this._onFieldsChange}\n          />\n        </Col>\n        <Col offset={1} span={14}>\n          <pre>{this.state.configString}</pre>\n        </Col>\n\n        <Modal\n          title=\"Config Import\"\n          width={700}\n          visible={this.state.importModalVisible}\n          onOk={this._handleImportOk}\n          onCancel={this._handleImportCancel}\n        >\n          {this.state.importErrors.map((err, index) => (\n            <Alert\n              key={'error' + index}\n              style={{ marginBottom: 4 }}\n              message={err}\n              type=\"error\"\n              showIcon\n            />\n          ))}\n          <Input.TextArea\n            rows={25}\n            value={this.state.jsonToImportString}\n            onChange={evt =>\n              this.setState({ jsonToImportString: evt.target.value })\n            }\n          />\n        </Modal>\n        <Modal\n          title=\"Validation report\"\n          width={700}\n          visible={this.state.validateModalVisible}\n          onOk={() => this.setState({ validateModalVisible: false })}\n        >\n          {this.state.importErrors.map((err, index) => (\n            <Alert\n              key={'error' + index}\n              style={{ marginBottom: 4 }}\n              message={err}\n              type=\"error\"\n              showIcon\n            />\n          ))}\n        </Modal>\n      </Row>\n    );\n  }\n}\n","import React from 'react';\nimport { Col, Layout, Row } from 'antd';\nimport 'antd/dist/antd.css';\nimport MainContent from \"./components/MainContent\";\n\nconst { Header, Sider, Content } = Layout;\n\n\nfunction App() {\n  return (\n    <Layout>\n      <Header style={{ background: '#ed1b2f' }}>\n        <Row>\n          <Col span={2}>\n            <img\n              alt=\"Sygic\"\n              src={process.env.PUBLIC_URL + '/logo.svg'}\n              style={{ display: 'inline' }}\n            />\n          </Col>\n          <Col span={22}>\n            <h1 style={{ color: 'white' }}>SDK Configuration</h1>\n          </Col>\n        </Row>\n      </Header>\n      <Layout style={{ background: 'white' }}>\n        <Sider style={{ background: 'white' }} />\n        <Content style={{ margin: 20 }}>\n          <MainContent />\n        </Content>\n        <Sider style={{ background: 'white' }} />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}