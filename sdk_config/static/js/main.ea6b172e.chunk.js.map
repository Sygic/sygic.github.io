{"version":3,"sources":["components/util/MappingUtil.js","components/LoggerConfig.js","components/util/SchemaParser.js","components/CustomSelect.js","components/util/SchemaValidator.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["_mapFieldsFromConfig","config","allFields","isImported","fieldList","_mapConfigToFields","flatMap","c","concat","Object","toConsumableArray","elements","children","obj","create","forEach","element","field","dotProp","get","path","resolved","valueResolver","undefined","shouldSet","set","value","touched","Array","find","e","map","mapFieldsToConfig","form","fields","formConfig","Panel","Collapse","Option","Select","formItemLayout","_createFormField","getFieldDecorator","react_default","a","createElement","es_form","Item","assign","key","name","label","objectSpread","decoratorProps","initialValue","rules","VISIBLE_LOG_APPENDERS","CreateAppenderConfig","items","properties","appenders","anyOf","filter","indexOf","$id","split","slice","propElement","title","enabled","getFieldValue","collapse","header","react_markdown_default","source","description","valuePropName","es_checkbox","style","display","entries","pair","parent","retObj","popover","content","placement","default","const","type","input_number","min","enum","es_select","placeholder","input","disabled","requiredRule","required","substr","lastIndexOf","_mapElementToConfig","EditorConfiguration","keys","excludeKeys","props","Audio.SoundSettings.speedcam_warn_sound","enableCustom","Audio.SoundSettings.danger_turn_notif_sound","Audio.SoundSettings.speed_limit_warn_sound","Audio.SoundSettings.warn_near_rail_sound","Audio.SoundSettings.traffic_notif_sound","Audio.SoundSettings.scout_route_notif_sound","Audio.SoundSettings.last_mile_notif_sound","Logging","mappedField","classpath","mapped","appender","_mapToJson","push","getFieldPaths","appenderElement","parentPath","render","_filterKeys","keyList","excludeFilter","filterList","replace","excludeFilterList","length","filterIndex","match","_processElement","$ref","Schema","join","allOf","reduce","acc","val","DeepMerge","_mapToSchemaPropsPath","_isFieldRequired","schemaProperties","console","error","lastIndex","substring","elementName","noOp","SchemaParser","parseSchema","_parseProperties","pathPrefix","retArr","property","index","_addElementsToConfig","id","elementTransform","isRequired","child","CustomSelect","state","searchTerm","onSearch","_this","setState","onChange","options","CustomSelect_Option","this","showSearch","defaultActiveFirstOption","showArrow","filterOption","Component","validator","Validator","ButtonGroup","Button","Group","marginBottom","wrapperCol","span","nestedFormItemLayout","_humanize","text","toUpperCase","mapArrayItemToSelect","item","attrs","MainContent_Option","mode","getDescriptionText","ConfigurationForm","_elementHasErrors","paths","getFieldError","errors","arrayHasElementsRecursive","arr","_mapConfigurationToElement","nested","arguments","showKey","isVisible","showEnable","hasErrors","MainContent_Panel","color","keyName","handleCheckboxChange","evt","target","checked","setFieldsValue","_this2","validationRule","numberProps","minimum","maximum","max","fieldValue","showReset","isFieldTouched","es_button","onClick","resetFields","icon","cursor","selectOptions","CustomSelect_CustomSelect","pattern","_this3","className","layout","bordered","React","WrappedConfigurationForm","Form","onValuesChange","changedValues","allValues","onFieldsChange","MainContent","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","configString","importModalVisible","validateModalVisible","importErrors","jsonToImportString","jsonToImport","copied","_onFieldsChange","debounce","JSON","stringify","has","_importBtnPress","_dirtyAppendersHackTransform","jsonConfig","log","class","_handleImportOk","loggingHack","parse","L","level","toLowerCase","message","errorList","_getValidationErrors","formRef","validateFields","_handleImportCancel","_showValidation","Modal","width","err","es_alert","showIcon","success","jsonObj","validationResult","validate","base","stack","_this5","row","col","navigator","clipboard","writeText","theme","twoToneColor","wrappedComponentRef","inst","offset","modal","visible","onOk","onCancel","TextArea","rows","Header","Layout","Sider","Content","App","background","alt","src","process","margin","MainContent_MainContent","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea6b172e.chunk.js","sourcesContent":["import dotProp from 'dot-prop';\n\nfunction _mapConfigToFields(config) {\n  return config.flatMap(c => {\n    return [...c.elements, ..._mapConfigToFields(c.children)];\n  });\n}\n\nfunction _mapFieldsFromConfig(config, allFields, isImported) {\n  const fieldList = _mapConfigToFields(config);\n  // console.log(fieldList);\n  const obj = Object.create(null);\n  fieldList.forEach(element => {\n    const field = dotProp.get(allFields, element.path);\n    // This is stupid, but well, this is javascript\n    const resolved = !!element.valueResolver\n      ? element.valueResolver(field)\n      : undefined;\n    if (!!resolved && resolved.shouldSet) {\n      // console.log(resolved.path, 'setting value', resolved.value);\n      dotProp.set(obj, resolved.path, resolved.value);\n    } else if (!!field && (!!field.touched || isImported(element.path))) {\n      // console.log(element.path, 'setting value', field.value);\n      if (field.value !== undefined && field.value !== null) {\n        dotProp.set(obj, element.path, field.value);\n      }\n    } else {\n      if (field instanceof Array && !element.valueResolver) {\n        const touched = field.find(e => !!e.touched);\n        // console.log(field, touched);\n        if (!!touched) {\n          dotProp.set(obj, element.path, field.map(e => e.value));\n        }\n      }\n\n      // console.log(\n      //   'rejected',\n      //   (resolved || element || { path: 'no_path' }).path,\n      //   field,\n      //   element\n      // );\n    }\n  });\n  // console.log(obj);\n  return obj;\n}\n\nexport function mapFieldsToConfig(\n  form,\n  fields,\n  allFields,\n  formConfig,\n  isImported\n) {\n  return _mapFieldsFromConfig(formConfig, allFields, isImported);\n}\n","import React from 'react';\nimport {\n  Checkbox,\n  Collapse,\n  Form,\n  Input,\n  InputNumber,\n  Popover,\n  Select,\n} from 'antd';\nimport ReactMarkdown from 'react-markdown';\n\nconst { Panel } = Collapse;\nconst { Option } = Select;\nconst formItemLayout = {};\n\nfunction _mapElementToConfig(key, element, parent) {\n  const retObj = {\n    name: key,\n    label: element.description ? (\n      <Popover\n        content={element.description}\n        title=\"Documentation\"\n        placement=\"topLeft\"\n      >\n        {element.title}\n      </Popover>\n    ) : (\n      element.title\n    ),\n    initialValue: element.default || element.const,\n  };\n  if (element.type === 'boolean') {\n    retObj.decoratorProps = {\n      valuePropName: 'checked',\n    };\n    retObj.label = '';\n    retObj.element = <Checkbox>{element.title}</Checkbox>;\n  }\n\n  if (element.type === 'number' || element.type === 'integer') {\n    retObj.element = <InputNumber min={0} />;\n  }\n\n  if (!!element.enum) {\n    retObj.element = (\n      <Select placeholder=\"Please select\">\n        {element.enum.map(e => (\n          <Option key={e} value={e}>\n            {e}\n          </Option>\n        ))}\n      </Select>\n    );\n  } else if (element.type === 'string') {\n    retObj.element = <Input disabled={!!element.const} />;\n  }\n\n  const requiredRule = {};\n  requiredRule.required =\n    !!parent.required &&\n    parent.required.indexOf(key.substr(key.lastIndexOf('.') + 1)) !== -1;\n  retObj.rules = [requiredRule];\n  return retObj;\n}\n\nconst _createFormField = (getFieldDecorator, field) => {\n  return (\n    <Form.Item key={field.name} label={field.label} {...formItemLayout}>\n      {getFieldDecorator(field.name, {\n        ...field.decoratorProps,\n        initialValue: field.initialValue,\n        rules: field.rules,\n      })(field.element)}\n    </Form.Item>\n  );\n};\n\nconst VISIBLE_LOG_APPENDERS = [\n  'DiagnosticsAppender',\n  'TelemetryAppender',\n  'CFileAppender',\n  'CConsoleAppender',\n];\n\nexport function CreateAppenderConfig(form, config) {\n  // console.log(config);\n  const { getFieldDecorator } = form;\n  const element = config.elements[0];\n  const props = element.items.properties.appenders;\n  // console.log('fffff', props, props.items.anyOf);\n  return props.items.anyOf\n    .filter(\n      e => VISIBLE_LOG_APPENDERS.indexOf(e.$id.split('/').slice(-1)[0]) !== -1\n    )\n    .map(propElement => {\n      // console.log(propElement.title);\n      const path = element.path + '.' + propElement.title;\n      const enabled = !!form.getFieldValue(path + '.enabled');\n      return (\n        <Collapse key={path}>\n          <Panel key={path + '_panel'} header={propElement.title}>\n            <ReactMarkdown source={propElement.description} />\n\n            {_createFormField(getFieldDecorator, {\n              name: path + '.enabled',\n              rules: [],\n              label: '',\n              decoratorProps: {\n                valuePropName: 'checked',\n              },\n              element: <Checkbox>Enable</Checkbox>,\n            })}\n            <div style={{ display: enabled ? 'block' : 'none' }}>\n              {Object.entries(propElement.properties).map(pair => {\n                // console.log(pair);\n                return _createFormField(\n                  getFieldDecorator,\n                  _mapElementToConfig(\n                    path + '.' + pair[0],\n                    pair[1],\n                    propElement\n                  )\n                );\n              })}\n            </div>\n          </Panel>\n        </Collapse>\n      );\n    });\n}\n\nfunction _mapToJson(appender) {\n  if (!appender || !appender.enabled.value) {\n    return null;\n  }\n  const retObj = Object.create(null);\n  Object.entries(appender).forEach(pair => {\n    if (pair[0] === 'enabled') {\n      return;\n    }\n    retObj[pair[0]] = pair[1].value;\n  });\n  return retObj;\n}\n\nexport function AppenderValueResolver(field) {\n  const mappedField = [\n    {\n      name: 'global',\n      classpath: '',\n      appenders: [],\n    },\n  ];\n\n  Object.entries(field).forEach(pair => {\n    const mapped = _mapToJson(pair[1]);\n    if (!!mapped) {\n      mappedField[0].appenders.push(mapped);\n    }\n  });\n  return {\n    shouldSet: true,\n    path: 'Logging',\n    value: mappedField,\n  };\n}\n","import dotProp from 'dot-prop';\nimport { default as Schema } from '../../schema_14x';\nimport * as DeepMerge from 'deepmerge';\nimport { AppenderValueResolver, CreateAppenderConfig } from '../LoggerConfig';\n\nfunction _parseProperties(props, pathPrefix) {\n  let retArr = [];\n  Object.keys(props).forEach(key => {\n    const property = props[key];\n    const path = pathPrefix === '' ? key : pathPrefix + '.' + key;\n    // console.log(key, property);\n    if (property.type === 'object') {\n      retArr = retArr.concat(_parseProperties(property.properties, path));\n    } else {\n      retArr.push(path);\n    }\n  });\n  return retArr;\n}\n\nconst EditorConfiguration = [\n  {\n    title: 'Licence',\n    description: 'Licence configuration information.',\n    keys: '^Authentication.*',\n  },\n  {\n    title: 'Online Services',\n    description: 'Configuration for online aspects of the SDK',\n    keys: ['^Online.General'],\n\n    children: [\n      {\n        title: 'Routing',\n        keys: '^Online.Routing.*',\n      },\n      {\n        title: 'Search',\n        keys: '^Online.Search.*',\n      },\n      {\n        title: 'SpeedCameras',\n        keys: '^SpeedCameras.*',\n      },\n      {\n        title: 'Incidents',\n        keys: '^Incidents.*',\n      },\n    ],\n  },\n  {\n    title: 'Storage',\n    keys: '^StorageFolders.*',\n  },\n  {\n    title: 'Routing',\n    keys: '^Routing.*',\n  },\n  {\n    title: 'Navigation',\n    keys: '^Navigation.WarningSettings.*',\n  },\n  {\n    title: 'Audio',\n    children: [\n      {\n        title: 'General',\n        keys: '^Audio.SoundSettings.*',\n        excludeKeys: ['^Audio.SoundSettings.tts_*'],\n        props: {\n          'Audio.SoundSettings.speedcam_warn_sound': { enableCustom: true },\n          'Audio.SoundSettings.danger_turn_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.speed_limit_warn_sound': { enableCustom: true },\n          'Audio.SoundSettings.warn_near_rail_sound': { enableCustom: true },\n          'Audio.SoundSettings.traffic_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.scout_route_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.last_mile_notif_sound': { enableCustom: true },\n        },\n      },\n      {\n        title: 'TTS',\n        keys: '^Audio.SoundSettings.tts_*',\n      },\n    ],\n  },\n  {\n    title: 'Drivers Behaviour',\n    keys: '^DriversBehavior.enable',\n    children: [\n      {\n        title: 'Configuration',\n        keys: '^DriversBehavior.*',\n        excludeKeys: '^DriversBehavior.enable',\n      },\n    ],\n  },\n  {\n    title: 'Logging',\n    keys: '^Logging',\n    props: {\n      Logging: {\n        valueResolver: AppenderValueResolver,\n      },\n    },\n    getFieldPaths: (form, element) => {\n      return element.items.properties.appenders.items.anyOf\n        .filter(\n          appenderElement =>\n            !!form.getFieldValue(\n              element.path + '.' + appenderElement.title + '.enabled'\n            )\n        )\n        .map(appenderElement => ({\n          parentPath: element.path + '.' + appenderElement.title,\n          elements: Object.entries(appenderElement.properties),\n        }))\n        .flatMap(e => e.elements.map(pair => e.parentPath + '.' + pair[0]));\n    },\n    render: (form, config) => CreateAppenderConfig(form, config),\n  },\n];\n\nfunction _filterKeys(keyList, filter, excludeFilter) {\n  const filterList = (filter instanceof Array\n    ? filter\n    : filter\n      ? [filter]\n      : []\n  ).map(e => {\n    return e.replace(/\\./, '\\\\.').replace(/\\*/, '.+?');\n  });\n  const excludeFilterList = (excludeFilter instanceof Array\n    ? excludeFilter\n    : excludeFilter\n      ? [excludeFilter]\n      : []\n  ).map(e => {\n    return e.replace(/\\./, '\\\\.').replace(/\\*/, '.+?');\n  });\n\n  if (!filterList.length && !excludeFilterList.length) {\n    return [];\n  }\n\n  return keyList.filter(key => {\n    for (const filterIndex in excludeFilterList) {\n      if (key.match(excludeFilterList[filterIndex])) {\n        return false;\n      }\n    }\n\n    for (const filterIndex in filterList) {\n      if (key.match(filterList[filterIndex])) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\nfunction _mergeAllOf(allOfArr) {\n  return _processElement(\n    allOfArr\n      .map(_processElement)\n      .reduce((acc, val) => DeepMerge(acc, val), Object.create(null))\n  );\n}\n\nfunction _processElement(element) {\n  if (element === undefined || element === null) {\n    return element;\n  }\n\n  if (!!element.$ref) {\n    const split = element.$ref.split('/');\n    return dotProp.get(Schema, split.slice(1).join('.'));\n  }\n  if (!!element.anyOf && element.anyOf instanceof Array) {\n    return { anyOf: element.anyOf.map(_processElement) };\n  }\n\n  // console.log('Processing element', element);\n  if (!!element.allOf) {\n    return _mergeAllOf(element.allOf);\n  }\n\n  if (element.type === 'array' && !!element.items) {\n    // console.log('------>', element.$id, element);\n    const items = element.items;\n    if (items instanceof Array) {\n      element.items = items.map(_processElement);\n    } else {\n      element.items = _processElement(items);\n    }\n  }\n\n  if (element.type === 'object' && !!element.properties) {\n    Object.entries(element.properties).forEach(pair => {\n      element.properties[pair[0]] = _processElement(pair[1]);\n    });\n  }\n\n  return element;\n}\n\nfunction _mapToSchemaPropsPath(path: String) {\n  return path.split('.').join('.properties.');\n}\n\nfunction _isFieldRequired(schemaProperties, path) {\n  if (!path) {\n    console.error('Missing path!');\n    return false;\n  }\n  const lastIndex = path.lastIndexOf('.');\n  const props = dotProp.get(\n    schemaProperties,\n    _mapToSchemaPropsPath(path.substring(0, lastIndex))\n  );\n  if (!props) {\n    return false;\n  }\n  const elementName = path.substring(lastIndex + 1);\n  return !!props.required && props.required.indexOf(elementName) !== -1;\n}\n\nfunction noOp(e) {\n  return e;\n}\n\nfunction _addElementsToConfig(keyList, config, id) {\n  return {\n    id,\n    ...config,\n    elements: _filterKeys(keyList, config.keys, config.excludeKeys)\n      .map(path => ({\n        ...dotProp.get(Schema.properties, _mapToSchemaPropsPath(path)),\n        path,\n      }))\n      .flatMap(config.elementTransform ? config.elementTransform : noOp)\n      .map(element => ({\n        ..._processElement(element),\n        path: element.path,\n        isRequired: _isFieldRequired(Schema.properties, element.path),\n        ...(!!config.props ? config.props[element.path] : undefined),\n      })),\n    children: (config.children || []).map((child, index) =>\n      _addElementsToConfig(keyList, child, `${id}.${index}`)\n    ),\n  };\n}\n\nexport default {\n  parseSchema: () => {\n    // console.log(Schema.properties);\n    const keyList = _parseProperties(Schema.properties, '');\n    // console.log(elements);\n    return EditorConfiguration.map((config, index) =>\n      _addElementsToConfig(keyList, config, index)\n    );\n  },\n};\n","import React, { Component } from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default class CustomSelect extends Component {\n  state = {\n    searchTerm: '',\n  };\n\n  onSearch = value => {\n    this.setState({ searchTerm: value });\n  };\n\n  onChange = value => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      <Option key={this.state.searchTerm} value={this.state.searchTerm}>\n        {this.state.searchTerm}\n      </Option>,\n      this.props.children,\n    ];\n    return (\n      <Select\n        {...this.props}\n        showSearch\n        defaultActiveFirstOption={false}\n        showArrow={true}\n        filterOption={true}\n        onSearch={this.onSearch}\n        onChange={this.onChange}\n      >\n        {options}\n      </Select>\n    );\n  }\n}\n","import { default as Schema } from '../../schema_14x';\nimport { Validator } from 'jsonschema';\n\nconst validator = new Validator();\n\nexport function validate(obj) {\n  return validator.validate(obj, Schema, { base: '' });\n}\n","import React, { Component } from 'react';\nimport {\n  Alert,\n  Button,\n  Checkbox,\n  Col,\n  Collapse,\n  Form,\n  Icon,\n  Input,\n  InputNumber,\n  Modal,\n  Row,\n  Popover,\n  Select,\n} from 'antd';\nimport { debounce } from 'debounce';\nimport ReactMarkdown from 'react-markdown';\nimport '../App.css';\nimport { mapFieldsToConfig } from './util/MappingUtil';\n\nimport SchemaParser from './util/SchemaParser';\nimport CustomSelect from './CustomSelect';\nimport dotProp from 'dot-prop';\n\nimport * as SchemaValidator from './util/SchemaValidator';\n\nconst Option = Select.Option;\nconst { Panel } = Collapse;\nconst ButtonGroup = Button.Group;\n\nconst formItemLayout = {\n  style: { marginBottom: 4 },\n  wrapperCol: { span: 22 },\n};\n\nconst nestedFormItemLayout = {\n  style: { marginBottom: 4 },\n  wrapperCol: { span: 24 },\n};\n\nfunction _humanize(text) {\n  if (!text) {\n    return text;\n  }\n  text = text.replace(/_/g, ' ');\n  return text[0].toUpperCase() + text.substr(1);\n}\n\nfunction mapArrayItemToSelect(field, item, attrs) {\n  let options = null;\n  if (!!item.enum) {\n    attrs.initialValue = item.default;\n    options = item.enum.map(e => (\n      <Option key={e} value={e}>\n        {_humanize(e)}\n      </Option>\n    ));\n  } else {\n    attrs.initialValue = item.default;\n    field.enableCustom = true;\n  }\n\n  return (\n    <Select mode={field.enableCustom ? 'tags' : 'multiple'}>{options}</Select>\n  );\n}\n\nfunction arrayHasElementsRecursive(arr) {\n  return arr instanceof Array\n    ? arr\n        .map(e => !!e || (arr instanceof Array && arrayHasElementsRecursive(e)))\n        .filter(e => e).length > 0\n    : !!arr;\n}\n\nfunction getDescriptionText(field) {\n  return (\n    field.description +\n    `\\n\\n|||\\n|---------|---|\\n|&nbsp;**Default:**&nbsp;|${\n      field.default\n    }|\\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Path:**&nbsp;|${field.path}|`\n  );\n}\n\nclass ConfigurationForm extends React.Component {\n  state = {};\n\n  _createFormField(form, config, field, nested = false) {\n    const { getFieldDecorator } = form;\n    const validationRule = { required: field.isRequired };\n    const attrs = {};\n    attrs.initialValue =\n      field.default === undefined || field.default === null\n        ? ''\n        : field.default;\n\n    let element;\n    let title = field.title;\n    let decoratorProps = field.decoratorProps || {};\n\n    switch (field.type) {\n      case 'number':\n      case 'integer':\n        const numberProps = {};\n        validationRule.type = 'number';\n        if (field.minimum !== undefined) {\n          numberProps.min = field.minimum;\n          validationRule.min = field.minimum;\n        }\n        if (field.maximum !== undefined) {\n          numberProps.max = field.maximum;\n          validationRule.max = field.maximum;\n        }\n        element = <InputNumber {...numberProps} />;\n        break;\n      case 'array':\n        let item = field.items;\n        if (item instanceof Array) {\n          if (item.length > 1) {\n            return (\n              <Collapse key={field.$id}>\n                <Panel key={field.path} header={field.title}>\n                  {item.map((child, index) =>\n                    this._createFormField(\n                      form,\n                      config,\n                      { ...child, path: field.path + `[${index}]` },\n                      true\n                    )\n                  )}\n                </Panel>\n              </Collapse>\n            );\n          } else {\n            element = mapArrayItemToSelect(field, item[0], attrs);\n          }\n        } else {\n          element = mapArrayItemToSelect(field, item, attrs);\n        }\n        break;\n      case 'boolean':\n        title = '';\n        const fieldValue = form.getFieldValue(field.path);\n        const showReset =\n          fieldValue !== undefined &&\n          (field.default !== fieldValue || form.isFieldTouched(field.path));\n\n        decoratorProps.valuePropName = 'checked';\n        element = (\n          <Checkbox>\n            {field.title}&nbsp;\n            <Popover\n              content={\n                <div>\n                  <ReactMarkdown source={getDescriptionText(field)} />\n                  {showReset ? (\n                    <Button\n                      onClick={() => form.resetFields([field.path])}\n                      type=\"link\"\n                    >\n                      Reset\n                    </Button>\n                  ) : null}\n                </div>\n              }\n              title=\"Documentation\"\n              placement=\"topLeft\"\n            >\n              <Icon style={{ cursor: 'pointer' }} type=\"question-circle\" />\n            </Popover>\n          </Checkbox>\n        );\n        break;\n      case 'string':\n        if (!!field.enum) {\n          const selectOptions = field.enum.map(e => (\n            <Option key={e} value={e}>\n              {_humanize(e)}\n            </Option>\n          ));\n          element = field.enableCustom ? (\n            <CustomSelect>{selectOptions}</CustomSelect>\n          ) : (\n            <Select>{selectOptions}</Select>\n          );\n        } else {\n          element = <Input />;\n        }\n        break;\n      case 'object':\n        title = '';\n        return (\n          <Collapse>\n            <Panel key={field.path} header={field.title}>\n              {Object.entries(field.properties).map(child =>\n                this._createFormField(\n                  form,\n                  config,\n                  { ...child[1], path: field.path + `.${child[0]}` },\n                  true\n                )\n              )}\n            </Panel>\n          </Collapse>\n        );\n      default:\n        element = <Input />;\n    }\n\n    if (field.pattern) {\n      validationRule.pattern = field.pattern;\n    }\n\n    const fieldValue = form.getFieldValue(field.path);\n    const showReset =\n      fieldValue !== undefined &&\n      (field.default !== fieldValue || form.isFieldTouched(field.path));\n    return (\n      <Form.Item\n        key={field.path}\n        label={\n          field.description && title ? (\n            <span>\n              {title}&nbsp;\n              <Popover\n                content={\n                  <div>\n                    <ReactMarkdown source={getDescriptionText(field)} />\n                    {showReset ? (\n                      <Button\n                        onClick={() => form.resetFields([field.path])}\n                        type=\"link\"\n                      >\n                        Reset\n                      </Button>\n                    ) : null}\n                  </div>\n                }\n                title=\"Documentation\"\n                placement=\"topLeft\"\n              >\n                <Icon style={{ cursor: 'pointer' }} type=\"question-circle\" />\n              </Popover>\n            </span>\n          ) : (\n            title\n          )\n        }\n        {...(nested ? nestedFormItemLayout : formItemLayout)}\n      >\n        {getFieldDecorator(field.path, {\n          rules: [validationRule],\n          ...attrs,\n          ...decoratorProps,\n        })(element)}\n      </Form.Item>\n    );\n  }\n\n  _elementHasErrors = (form, config) => {\n    return config.elements\n      .map(element => {\n        const paths = !!config.getFieldPaths\n          ? config.getFieldPaths(form, element)\n          : element.path;\n        return (paths instanceof Array ? paths : [paths])\n          .map(path => {\n            return this.props.form.getFieldError(path);\n          })\n          .filter(e => !!e)\n          .map(errors => arrayHasElementsRecursive(errors))\n          .reduce((acc, val) => acc || val, false);\n      })\n      .reduce((val, acc) => val || acc, false);\n  };\n\n  _mapConfigurationToElement = (form, config, nested = false) => {\n    const showKey = 'show_' + config.id;\n    const isVisible = !config.showEnable || this.state[showKey];\n\n    // this has huge potential for bugs. Let's keep it this way\n    const hasErrors = this._elementHasErrors(form, config);\n    if (hasErrors && false) {\n      console.log(\n        'Has errors',\n        config,\n        config.elements.map(element =>\n          this.props.form.getFieldError(element.path)\n        )\n      );\n    }\n\n    return (\n      <Panel\n        header={\n          hasErrors ? (\n            <span style={{ color: 'red' }}>{config.title}</span>\n          ) : (\n            config.title\n          )\n        }\n        key={config.title}\n      >\n        {config.description && <ReactMarkdown source={config.description} />}\n        {config.showEnable ? (\n          <Checkbox keyName={showKey} onChange={this.handleCheckboxChange}>\n            Enable\n          </Checkbox>\n        ) : null}\n\n        {isVisible\n          ? !!config.render\n            ? config.render(form, config)\n            : config.elements.map(e =>\n                this._createFormField(form, config, e, nested)\n              )\n          : null}\n\n        {isVisible && config.children.length ? (\n          <Collapse>\n            {config.children.map(child =>\n              this._mapConfigurationToElement(form, child, true)\n            )}\n          </Collapse>\n        ) : null}\n      </Panel>\n    );\n  };\n\n  handleCheckboxChange = evt => {\n    const state = {};\n    state[evt.target.keyName] = evt.target.checked;\n    this.setState(state, () => {\n      this.props.form.setFieldsValue({});\n    });\n  };\n\n  render() {\n    const { form } = this.props;\n    return (\n      <div>\n        {/*<Button onClick={() => form.validateFields()}>Validate</Button>*/}\n        <h1 className=\"header-margin\">Configuration</h1>\n        <Form layout=\"vertical\">\n          <Collapse bordered={true}>\n            {this.props.formConfig.map(field =>\n              this._mapConfigurationToElement(form, field)\n            )}\n          </Collapse>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedConfigurationForm = Form.create({\n  name: 'register',\n  onValuesChange: (props, changedValues, allValues) =>\n    props.onValuesChange\n      ? props.onValuesChange(changedValues, allValues)\n      : null,\n  onFieldsChange: (props, fields, allFields) =>\n    props.onFieldsChange\n      ? props.onFieldsChange(props, fields, allFields)\n      : null,\n})(ConfigurationForm);\n\nexport default class MainContent extends Component<> {\n  state = {\n    configString: '{}',\n    importModalVisible: false,\n    validateModalVisible: false,\n    importErrors: [],\n    jsonToImportString: '',\n    jsonToImport: {},\n    copied: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.formRef = null;\n    this.formConfig = SchemaParser.parseSchema();\n  }\n\n  _onFieldsChange = debounce((props, fields, allFields) => {\n    // console.log('OnFieldsChange', props, fields, allFields);\n    this.setState({\n      copied: false,\n      configString: JSON.stringify(\n        mapFieldsToConfig(\n          props.form,\n          fields,\n          allFields,\n          this.formConfig,\n          path => dotProp.has(this.state.jsonToImport, path)\n        ),\n        null,\n        2\n      ),\n    });\n  }, 300);\n\n  _importBtnPress = () => {\n    this.setState({ importModalVisible: true });\n  };\n\n  _dirtyAppendersHackTransform = jsonConfig => {\n    return jsonConfig.Logging[0].appenders\n      .filter(\n        e =>\n          console.log(e) ||\n          [\n            'CConsoleAppender',\n            'CFileAppender',\n            'TelemetryAppender',\n            'DiagnosticsAppender',\n          ].indexOf(e['class']) !== -1\n      )\n      .reduce((acc, value) => {\n        acc[value.class] = { enabled: true, ...value };\n        return acc;\n      }, {});\n  };\n\n  _getValidationErrors(jsonObj) {\n    const validationResult = SchemaValidator.validate(jsonObj);\n    // console.log(validationResult);\n    if (validationResult.errors.length) {\n      return validationResult.errors.map(e => e.stack.replace('instance.', ''));\n    }\n\n    this.setState({ importErrors: [] });\n    return [];\n  }\n\n  _handleImportOk = () => {\n    let jsonToImport;\n    let loggingHack;\n    try {\n      jsonToImport = JSON.parse(this.state.jsonToImportString);\n      // lowercase log level enums - dirty hack at its best\n      if (!!jsonToImport.Logging) {\n        jsonToImport.Logging = jsonToImport.Logging.map(L => ({\n          ...L,\n          appenders: L.appenders.map(a => ({\n            ...a,\n            level: a.level.toLowerCase(),\n          })),\n        }));\n      }\n      loggingHack = this._dirtyAppendersHackTransform(jsonToImport);\n    } catch (e) {\n      this.setState({ importErrors: [e.message] });\n      return;\n    }\n\n    const errorList = this._getValidationErrors(jsonToImport);\n    this.setState({ importErrors: errorList });\n\n    // setting mapped value - dirty hack\n    jsonToImport.Logging = loggingHack;\n\n    if (errorList.length) {\n      return;\n    }\n\n    this.setState({ jsonToImport });\n    // console.log('Json to import', jsonToImport);\n    this.formRef.props.form.setFieldsValue(jsonToImport);\n    this.formRef.props.form.validateFields();\n    this.setState({ importModalVisible: false });\n  };\n\n  _handleImportCancel = () => {\n    this.setState({ importModalVisible: false });\n  };\n\n  _showValidation = () => {\n    const config = JSON.parse(this.state.configString);\n    this.formRef.props.form.validateFields();\n    const errorList = this._getValidationErrors(config);\n\n    if (errorList.length) {\n      Modal.error({\n        title: 'Validation',\n        width: 800,\n        content: (\n          <div>\n            {errorList.map((err, index) => (\n              <Alert\n                key={'error' + index}\n                style={{ marginBottom: 4 }}\n                message={err}\n                type=\"error\"\n                showIcon\n              />\n            ))}\n          </div>\n        ),\n      });\n    } else {\n      Modal.success({\n        title: 'Validation',\n        content: 'SDK JSON configuration is valid',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col span={9}>\n          <ButtonGroup>\n            <Button type=\"primary\" onClick={this._importBtnPress}>\n              Import configuration\n            </Button>\n            <Button onClick={this._showValidation}>Validate</Button>\n            <Button\n              onClick={() => {\n                navigator.clipboard.writeText(this.state.configString);\n                this.setState({ copied: true });\n              }}\n            >\n              {this.state.copied ? (\n                <span>\n                  <Icon\n                    type=\"check-circle\"\n                    theme=\"twoTone\"\n                    twoToneColor=\"#52c41a\"\n                  />{' '}\n                  Copied\n                </span>\n              ) : (\n                'Copy to Clipboard'\n              )}\n            </Button>\n          </ButtonGroup>\n          <WrappedConfigurationForm\n            wrappedComponentRef={inst => (this.formRef = inst)}\n            formConfig={this.formConfig}\n            onFieldsChange={this._onFieldsChange}\n          />\n        </Col>\n        <Col offset={1} span={14}>\n          <pre>{this.state.configString}</pre>\n        </Col>\n\n        <Modal\n          title=\"Config Import\"\n          width={700}\n          visible={this.state.importModalVisible}\n          onOk={this._handleImportOk}\n          onCancel={this._handleImportCancel}\n        >\n          {this.state.importErrors.map((err, index) => (\n            <Alert\n              key={'error' + index}\n              style={{ marginBottom: 4 }}\n              message={err}\n              type=\"error\"\n              showIcon\n            />\n          ))}\n          <Input.TextArea\n            rows={25}\n            value={this.state.jsonToImportString}\n            onChange={evt =>\n              this.setState({ jsonToImportString: evt.target.value })\n            }\n          />\n        </Modal>\n        <Modal\n          title=\"Validation report\"\n          width={700}\n          visible={this.state.validateModalVisible}\n          onOk={() => this.setState({ validateModalVisible: false })}\n        >\n          {this.state.importErrors.map((err, index) => (\n            <Alert\n              key={'error' + index}\n              style={{ marginBottom: 4 }}\n              message={err}\n              type=\"error\"\n              showIcon\n            />\n          ))}\n        </Modal>\n      </Row>\n    );\n  }\n}\n","import React from 'react';\nimport { Col, Layout, Row } from 'antd';\nimport 'antd/dist/antd.css';\nimport MainContent from \"./components/MainContent\";\n\nconst { Header, Sider, Content } = Layout;\n\n\nfunction App() {\n  return (\n    <Layout>\n      <Header style={{ background: '#ed1b2f' }}>\n        <Row>\n          <Col span={2}>\n            <img\n              alt=\"Sygic\"\n              src={process.env.PUBLIC_URL + '/logo.svg'}\n              style={{ display: 'inline' }}\n            />\n          </Col>\n          <Col span={22}>\n            <h1 style={{ color: 'white' }}>SDK Configuration</h1>\n          </Col>\n        </Row>\n      </Header>\n      <Layout style={{ background: 'white' }}>\n        <Sider style={{ background: 'white' }} />\n        <Content style={{ margin: 20 }}>\n          <MainContent />\n        </Content>\n        <Sider style={{ background: 'white' }} />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}