{"version":3,"sources":["components/util/MappingUtil.js","components/util/SchemaParser.js","components/CustomSelect.js","components/util/SchemaValidator.js","components/LoggerConfig.js","components/GuiConfiguration.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["_mapFieldsFromConfig","config","allFields","isImported","fieldList","_mapConfigToFields","flatMap","c","concat","Object","toConsumableArray","elements","children","obj","create","forEach","element","field","dotProp","get","path","resolved","valueResolver","undefined","shouldSet","set","value","touched","Array","find","e","map","mapFieldsToConfig","form","fields","formConfig","_filterKeys","keyList","filter","excludeFilter","filterList","replace","excludeFilterList","length","key","filterIndex","match","_processElement","$ref","split","Schema","slice","join","anyOf","allOf","reduce","acc","val","DeepMerge","type","items","properties","entries","pair","_mapToSchemaPropsPath","_isFieldRequired","schemaProperties","console","error","lastIndex","lastIndexOf","props","substring","elementName","required","indexOf","noOp","SchemaParser","parseSchema","guiConfig","_parseProperties","pathPrefix","retArr","keys","property","push","index","_addElementsToConfig","id","objectSpread","excludeKeys","elementTransform","isRequired","child","Option","Select","CustomSelect","state","searchTerm","onSearch","_this","setState","onChange","options","react_default","a","createElement","this","es_select","assign","showSearch","defaultActiveFirstOption","showArrow","filterOption","Component","validator","Validator","Panel","Collapse","formItemLayout","_createFormField","getFieldDecorator","es_form","Item","name","label","decoratorProps","initialValue","rules","VISIBLE_LOG_APPENDERS","CreateAppenderConfig","appenders","$id","propElement","title","enabled","getFieldValue","collapse","header","react_markdown_default","source","description","valuePropName","es_checkbox","style","display","parent","retObj","popover","content","placement","default","const","input_number","min","enum","placeholder","LoggerConfig_Option","input","disabled","requiredRule","substr","_mapElementToConfig","GuiConfiguration","Audio.SoundSettings.speedcam_warn_sound","enableCustom","Audio.SoundSettings.danger_turn_notif_sound","Audio.SoundSettings.speed_limit_warn_sound","Audio.SoundSettings.warn_near_rail_sound","Audio.SoundSettings.traffic_notif_sound","Audio.SoundSettings.scout_route_notif_sound","Audio.SoundSettings.last_mile_notif_sound","Logging","mappedField","classpath","mapped","appender","_mapToJson","getFieldPaths","appenderElement","parentPath","render","ButtonGroup","Button","Group","marginBottom","wrapperCol","span","nestedFormItemLayout","_humanize","text","toUpperCase","mapArrayItemToSelect","item","attrs","MainContent_Option","mode","getDescriptionText","ConfigurationForm","_elementHasErrors","paths","getFieldError","errors","arrayHasElementsRecursive","arr","_mapConfigurationToElement","nested","arguments","showKey","isVisible","showEnable","hasErrors","MainContent_Panel","color","keyName","handleCheckboxChange","evt","target","checked","setFieldsValue","_this2","validationRule","numberProps","minimum","maximum","max","fieldValue","showReset","isFieldTouched","es_button","onClick","resetFields","icon","cursor","selectOptions","CustomSelect_CustomSelect","pattern","_this3","className","layout","bordered","React","WrappedConfigurationForm","Form","onValuesChange","changedValues","allValues","onFieldsChange","MainContent","_this4","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","configString","importModalVisible","validateModalVisible","importErrors","jsonToImportString","jsonToImport","copied","_onFieldsChange","debounce","JSON","stringify","has","_importBtnPress","_dirtyAppendersHackTransform","jsonConfig","log","class","_handleImportOk","loggingHack","parse","L","level","toLowerCase","message","errorList","_getValidationErrors","formRef","validateFields","_handleImportCancel","_showValidation","Modal","width","err","es_alert","showIcon","success","jsonObj","validationResult","validate","base","stack","_this5","row","col","navigator","clipboard","writeText","theme","twoToneColor","wrappedComponentRef","inst","offset","modal","visible","onOk","onCancel","TextArea","rows","Header","Layout","Sider","Content","App","background","alt","src","process","margin","MainContent_MainContent","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6510bb32.chunk.js","sourcesContent":["import dotProp from 'dot-prop';\n\nfunction _mapConfigToFields(config) {\n  return config.flatMap(c => {\n    return [...c.elements, ..._mapConfigToFields(c.children)];\n  });\n}\n\nfunction _mapFieldsFromConfig(config, allFields, isImported) {\n  const fieldList = _mapConfigToFields(config);\n  // console.log(fieldList);\n  const obj = Object.create(null);\n  fieldList.forEach(element => {\n    const field = dotProp.get(allFields, element.path);\n    // This is stupid, but well, this is javascript\n    const resolved = !!element.valueResolver\n      ? element.valueResolver(field)\n      : undefined;\n    if (!!resolved && resolved.shouldSet) {\n      // console.log(resolved.path, 'setting value', resolved.value);\n      dotProp.set(obj, resolved.path, resolved.value);\n    } else if (!!field && (!!field.touched || isImported(element.path))) {\n      // console.log(element.path, 'setting value', field.value);\n      if (field.value !== undefined && field.value !== null) {\n        dotProp.set(obj, element.path, field.value);\n      }\n    } else {\n      if (field instanceof Array && !element.valueResolver) {\n        const touched = field.find(e => !!e.touched);\n        // console.log(field, touched);\n        if (!!touched) {\n          dotProp.set(obj, element.path, field.map(e => e.value));\n        }\n      }\n\n      // console.log(\n      //   'rejected',\n      //   (resolved || element || { path: 'no_path' }).path,\n      //   field,\n      //   element\n      // );\n    }\n  });\n  // console.log(obj);\n  return obj;\n}\n\nexport function mapFieldsToConfig(\n  form,\n  fields,\n  allFields,\n  formConfig,\n  isImported\n) {\n  return _mapFieldsFromConfig(formConfig, allFields, isImported);\n}\n","import dotProp from 'dot-prop';\nimport { default as Schema } from '../../schema_14x';\nimport * as DeepMerge from 'deepmerge';\n\nfunction _parseProperties(props, pathPrefix) {\n  let retArr = [];\n  Object.keys(props).forEach(key => {\n    const property = props[key];\n    const path = pathPrefix === '' ? key : pathPrefix + '.' + key;\n    // console.log(key, property);\n    if (property.type === 'object') {\n      retArr = retArr.concat(_parseProperties(property.properties, path));\n    } else {\n      retArr.push(path);\n    }\n  });\n  return retArr;\n}\n\nfunction _filterKeys(keyList, filter, excludeFilter) {\n  const filterList = (filter instanceof Array\n    ? filter\n    : filter\n      ? [filter]\n      : []\n  ).map(e => {\n    return e.replace(/\\./, '\\\\.').replace(/\\*/, '.+?');\n  });\n  const excludeFilterList = (excludeFilter instanceof Array\n    ? excludeFilter\n    : excludeFilter\n      ? [excludeFilter]\n      : []\n  ).map(e => {\n    return e.replace(/\\./, '\\\\.').replace(/\\*/, '.+?');\n  });\n\n  if (!filterList.length && !excludeFilterList.length) {\n    return [];\n  }\n\n  return keyList.filter(key => {\n    for (const filterIndex in excludeFilterList) {\n      if (key.match(excludeFilterList[filterIndex])) {\n        return false;\n      }\n    }\n\n    for (const filterIndex in filterList) {\n      if (key.match(filterList[filterIndex])) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\nfunction _mergeAllOf(allOfArr) {\n  return _processElement(\n    allOfArr\n      .map(_processElement)\n      .reduce((acc, val) => DeepMerge(acc, val), Object.create(null))\n  );\n}\n\nfunction _processElement(element) {\n  if (element === undefined || element === null) {\n    return element;\n  }\n\n  if (!!element.$ref) {\n    const split = element.$ref.split('/');\n    return dotProp.get(Schema, split.slice(1).join('.'));\n  }\n  if (!!element.anyOf && element.anyOf instanceof Array) {\n    return { anyOf: element.anyOf.map(_processElement) };\n  }\n\n  // console.log('Processing element', element);\n  if (!!element.allOf) {\n    return _mergeAllOf(element.allOf);\n  }\n\n  if (element.type === 'array' && !!element.items) {\n    // console.log('------>', element.$id, element);\n    const items = element.items;\n    if (items instanceof Array) {\n      element.items = items.map(_processElement);\n    } else {\n      element.items = _processElement(items);\n    }\n  }\n\n  if (element.type === 'object' && !!element.properties) {\n    Object.entries(element.properties).forEach(pair => {\n      element.properties[pair[0]] = _processElement(pair[1]);\n    });\n  }\n\n  return element;\n}\n\nfunction _mapToSchemaPropsPath(path: String) {\n  return path.split('.').join('.properties.');\n}\n\nfunction _isFieldRequired(schemaProperties, path) {\n  if (!path) {\n    console.error('Missing path!');\n    return false;\n  }\n  const lastIndex = path.lastIndexOf('.');\n  const props = dotProp.get(\n    schemaProperties,\n    _mapToSchemaPropsPath(path.substring(0, lastIndex))\n  );\n  if (!props) {\n    return false;\n  }\n  const elementName = path.substring(lastIndex + 1);\n  return !!props.required && props.required.indexOf(elementName) !== -1;\n}\n\nfunction noOp(e) {\n  return e;\n}\n\nfunction _addElementsToConfig(keyList, config, id) {\n  return {\n    id,\n    ...config,\n    elements: _filterKeys(keyList, config.keys, config.excludeKeys)\n      .map(path => ({\n        ...dotProp.get(Schema.properties, _mapToSchemaPropsPath(path)),\n        path,\n      }))\n      .flatMap(config.elementTransform ? config.elementTransform : noOp)\n      .map(element => ({\n        ..._processElement(element),\n        path: element.path,\n        isRequired: _isFieldRequired(Schema.properties, element.path),\n        ...(!!config.props ? config.props[element.path] : undefined),\n      })),\n    children: (config.children || []).map((child, index) =>\n      _addElementsToConfig(keyList, child, `${id}.${index}`)\n    ),\n  };\n}\n\nexport default {\n  parseSchema: (guiConfig) => {\n    // console.log(Schema.properties);\n    const keyList = _parseProperties(Schema.properties, '');\n    // console.log(elements);\n    return guiConfig.map((config, index) =>\n      _addElementsToConfig(keyList, config, index)\n    );\n  },\n};\n","import React, { Component } from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default class CustomSelect extends Component {\n  state = {\n    searchTerm: '',\n  };\n\n  onSearch = value => {\n    this.setState({ searchTerm: value });\n  };\n\n  onChange = value => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = [\n      <Option key={this.state.searchTerm} value={this.state.searchTerm}>\n        {this.state.searchTerm}\n      </Option>,\n      this.props.children,\n    ];\n    return (\n      <Select\n        {...this.props}\n        showSearch\n        defaultActiveFirstOption={false}\n        showArrow={true}\n        filterOption={true}\n        onSearch={this.onSearch}\n        onChange={this.onChange}\n      >\n        {options}\n      </Select>\n    );\n  }\n}\n","import { default as Schema } from '../../schema_14x';\nimport { Validator } from 'jsonschema';\n\nconst validator = new Validator();\n\nexport function validate(obj) {\n  return validator.validate(obj, Schema, { base: '' });\n}\n","import React from 'react';\nimport {\n  Checkbox,\n  Collapse,\n  Form,\n  Input,\n  InputNumber,\n  Popover,\n  Select,\n} from 'antd';\nimport ReactMarkdown from 'react-markdown';\n\nconst { Panel } = Collapse;\nconst { Option } = Select;\nconst formItemLayout = {};\n\nfunction _mapElementToConfig(key, element, parent) {\n  const retObj = {\n    name: key,\n    label: element.description ? (\n      <Popover\n        content={element.description}\n        title=\"Documentation\"\n        placement=\"topLeft\"\n      >\n        {element.title}\n      </Popover>\n    ) : (\n      element.title\n    ),\n    initialValue: element.default || element.const,\n  };\n  if (element.type === 'boolean') {\n    retObj.decoratorProps = {\n      valuePropName: 'checked',\n    };\n    retObj.label = '';\n    retObj.element = <Checkbox>{element.title}</Checkbox>;\n  }\n\n  if (element.type === 'number' || element.type === 'integer') {\n    retObj.element = <InputNumber min={0} />;\n  }\n\n  if (!!element.enum) {\n    retObj.element = (\n      <Select placeholder=\"Please select\">\n        {element.enum.map(e => (\n          <Option key={e} value={e}>\n            {e}\n          </Option>\n        ))}\n      </Select>\n    );\n  } else if (element.type === 'string') {\n    retObj.element = <Input disabled={!!element.const} />;\n  }\n\n  const requiredRule = {};\n  requiredRule.required =\n    !!parent.required &&\n    parent.required.indexOf(key.substr(key.lastIndexOf('.') + 1)) !== -1;\n  retObj.rules = [requiredRule];\n  return retObj;\n}\n\nconst _createFormField = (getFieldDecorator, field) => {\n  return (\n    <Form.Item key={field.name} label={field.label} {...formItemLayout}>\n      {getFieldDecorator(field.name, {\n        ...field.decoratorProps,\n        initialValue: field.initialValue,\n        rules: field.rules,\n      })(field.element)}\n    </Form.Item>\n  );\n};\n\nconst VISIBLE_LOG_APPENDERS = [\n  'DiagnosticsAppender',\n  'TelemetryAppender',\n  'CFileAppender',\n  'CConsoleAppender',\n];\n\nexport function CreateAppenderConfig(form, config) {\n  // console.log(config);\n  const { getFieldDecorator } = form;\n  const element = config.elements[0];\n  const props = element.items.properties.appenders;\n  // console.log('fffff', props, props.items.anyOf);\n  return props.items.anyOf\n    .filter(\n      e => VISIBLE_LOG_APPENDERS.indexOf(e.$id.split('/').slice(-1)[0]) !== -1\n    )\n    .map(propElement => {\n      // console.log(propElement.title);\n      const path = element.path + '.' + propElement.title;\n      const enabled = !!form.getFieldValue(path + '.enabled');\n      return (\n        <Collapse key={path}>\n          <Panel key={path + '_panel'} header={propElement.title}>\n            <ReactMarkdown source={propElement.description} />\n\n            {_createFormField(getFieldDecorator, {\n              name: path + '.enabled',\n              rules: [],\n              label: '',\n              decoratorProps: {\n                valuePropName: 'checked',\n              },\n              element: <Checkbox>Enable</Checkbox>,\n            })}\n            <div style={{ display: enabled ? 'block' : 'none' }}>\n              {Object.entries(propElement.properties).map(pair => {\n                // console.log(pair);\n                return _createFormField(\n                  getFieldDecorator,\n                  _mapElementToConfig(\n                    path + '.' + pair[0],\n                    pair[1],\n                    propElement\n                  )\n                );\n              })}\n            </div>\n          </Panel>\n        </Collapse>\n      );\n    });\n}\n\nfunction _mapToJson(appender) {\n  if (!appender || !appender.enabled.value) {\n    return null;\n  }\n  const retObj = Object.create(null);\n  Object.entries(appender).forEach(pair => {\n    if (pair[0] === 'enabled') {\n      return;\n    }\n    retObj[pair[0]] = pair[1].value;\n  });\n  return retObj;\n}\n\nexport function AppenderValueResolver(field) {\n  const mappedField = [\n    {\n      name: 'global',\n      classpath: '',\n      appenders: [],\n    },\n  ];\n\n  Object.entries(field).forEach(pair => {\n    const mapped = _mapToJson(pair[1]);\n    if (!!mapped) {\n      mappedField[0].appenders.push(mapped);\n    }\n  });\n  return {\n    shouldSet: true,\n    path: 'Logging',\n    value: mappedField,\n  };\n}\n","import { AppenderValueResolver, CreateAppenderConfig } from './LoggerConfig';\n\nconst GuiConfiguration = [\n  {\n    title: 'Licence',\n    description: 'Licence configuration information.',\n    keys: '^Authentication.*',\n  },\n  {\n    title: 'Online Services',\n    description: 'Configuration for online aspects of the SDK',\n    keys: ['^Online.General'],\n\n    children: [\n      {\n        title: 'Routing',\n        keys: '^Online.Routing.*',\n      },\n      {\n        title: 'Search',\n        keys: '^Online.Search.*',\n      },\n      {\n        title: 'SpeedCameras',\n        keys: '^SpeedCameras.*',\n      },\n      {\n        title: 'Incidents',\n        keys: '^Incidents.*',\n      },\n    ],\n  },\n  {\n    title: 'Storage',\n    keys: '^StorageFolders.*',\n  },\n  {\n    title: 'Routing',\n    keys: '^Routing.*',\n  },\n  {\n    title: 'Navigation',\n    keys: '^Navigation.WarningSettings.*',\n  },\n  {\n    title: 'Audio',\n    children: [\n      {\n        title: 'General',\n        keys: '^Audio.SoundSettings.*',\n        excludeKeys: ['^Audio.SoundSettings.tts_*'],\n        props: {\n          'Audio.SoundSettings.speedcam_warn_sound': { enableCustom: true },\n          'Audio.SoundSettings.danger_turn_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.speed_limit_warn_sound': { enableCustom: true },\n          'Audio.SoundSettings.warn_near_rail_sound': { enableCustom: true },\n          'Audio.SoundSettings.traffic_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.scout_route_notif_sound': { enableCustom: true },\n          'Audio.SoundSettings.last_mile_notif_sound': { enableCustom: true },\n        },\n      },\n      {\n        title: 'TTS',\n        keys: '^Audio.SoundSettings.tts_*',\n      },\n    ],\n  },\n  {\n    title: 'Drivers Behaviour',\n    keys: '^DriversBehavior.enable',\n    children: [\n      {\n        title: 'Configuration',\n        keys: '^DriversBehavior.*',\n        excludeKeys: '^DriversBehavior.enable',\n      },\n    ],\n  },\n  {\n    title: 'Logging',\n    keys: '^Logging',\n    props: {\n      Logging: {\n        valueResolver: AppenderValueResolver,\n      },\n    },\n    getFieldPaths: (form, element) => {\n      return element.items.properties.appenders.items.anyOf\n        .filter(\n          appenderElement =>\n            !!form.getFieldValue(\n              element.path + '.' + appenderElement.title + '.enabled'\n            )\n        )\n        .map(appenderElement => ({\n          parentPath: element.path + '.' + appenderElement.title,\n          elements: Object.entries(appenderElement.properties),\n        }))\n        .flatMap(e => e.elements.map(pair => e.parentPath + '.' + pair[0]));\n    },\n    render: (form, config) => CreateAppenderConfig(form, config),\n  },\n];\n\nexport default GuiConfiguration;\n","import React, { Component } from 'react';\nimport {\n  Alert,\n  Button,\n  Checkbox,\n  Col,\n  Collapse,\n  Form,\n  Icon,\n  Input,\n  InputNumber,\n  Modal,\n  Row,\n  Popover,\n  Select,\n} from 'antd';\nimport { debounce } from 'debounce';\nimport ReactMarkdown from 'react-markdown';\nimport '../App.css';\nimport { mapFieldsToConfig } from './util/MappingUtil';\n\nimport SchemaParser from './util/SchemaParser';\nimport CustomSelect from './CustomSelect';\nimport dotProp from 'dot-prop';\n\nimport * as SchemaValidator from './util/SchemaValidator';\nimport GuiConfiguration from './GuiConfiguration';\n\nconst Option = Select.Option;\nconst { Panel } = Collapse;\nconst ButtonGroup = Button.Group;\n\nconst formItemLayout = {\n  style: { marginBottom: 4 },\n  wrapperCol: { span: 22 },\n};\n\nconst nestedFormItemLayout = {\n  style: { marginBottom: 4 },\n  wrapperCol: { span: 24 },\n};\n\nfunction _humanize(text) {\n  if (!text) {\n    return text;\n  }\n  text = text.replace(/_/g, ' ');\n  return text[0].toUpperCase() + text.substr(1);\n}\n\nfunction mapArrayItemToSelect(field, item, attrs) {\n  let options = null;\n  if (!!item.enum) {\n    attrs.initialValue = item.default;\n    options = item.enum.map(e => (\n      <Option key={e} value={e}>\n        {_humanize(e)}\n      </Option>\n    ));\n  } else {\n    attrs.initialValue = item.default;\n    field.enableCustom = true;\n  }\n\n  return (\n    <Select mode={field.enableCustom ? 'tags' : 'multiple'}>{options}</Select>\n  );\n}\n\nfunction arrayHasElementsRecursive(arr) {\n  return arr instanceof Array\n    ? arr\n        .map(e => !!e || (arr instanceof Array && arrayHasElementsRecursive(e)))\n        .filter(e => e).length > 0\n    : !!arr;\n}\n\nfunction getDescriptionText(field) {\n  return (\n    field.description +\n    `\\n\\n|||\\n|---------|---|\\n|&nbsp;**Default:**&nbsp;|${\n      field.default\n    }|\\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Path:**&nbsp;|${field.path}|`\n  );\n}\n\nclass ConfigurationForm extends React.Component {\n  state = {};\n\n  _createFormField(form, config, field, nested = false) {\n    const { getFieldDecorator } = form;\n    const validationRule = { required: field.isRequired };\n    const attrs = {};\n    attrs.initialValue =\n      field.default === undefined || field.default === null\n        ? ''\n        : field.default;\n\n    let element;\n    let title = field.title;\n    let decoratorProps = field.decoratorProps || {};\n\n    switch (field.type) {\n      case 'number':\n      case 'integer':\n        const numberProps = {};\n        validationRule.type = 'number';\n        if (field.minimum !== undefined) {\n          numberProps.min = field.minimum;\n          validationRule.min = field.minimum;\n        }\n        if (field.maximum !== undefined) {\n          numberProps.max = field.maximum;\n          validationRule.max = field.maximum;\n        }\n        element = <InputNumber {...numberProps} />;\n        break;\n      case 'array':\n        let item = field.items;\n        if (item instanceof Array) {\n          if (item.length > 1) {\n            return (\n              <Collapse key={field.$id}>\n                <Panel key={field.path} header={field.title}>\n                  {item.map((child, index) =>\n                    this._createFormField(\n                      form,\n                      config,\n                      { ...child, path: field.path + `[${index}]` },\n                      true\n                    )\n                  )}\n                </Panel>\n              </Collapse>\n            );\n          } else {\n            element = mapArrayItemToSelect(field, item[0], attrs);\n          }\n        } else {\n          element = mapArrayItemToSelect(field, item, attrs);\n        }\n        break;\n      case 'boolean':\n        title = '';\n        const fieldValue = form.getFieldValue(field.path);\n        const showReset =\n          fieldValue !== undefined &&\n          (field.default !== fieldValue || form.isFieldTouched(field.path));\n\n        decoratorProps.valuePropName = 'checked';\n        element = (\n          <Checkbox>\n            {field.title}&nbsp;\n            <Popover\n              content={\n                <div>\n                  <ReactMarkdown source={getDescriptionText(field)} />\n                  {showReset ? (\n                    <Button\n                      onClick={() => form.resetFields([field.path])}\n                      type=\"link\"\n                    >\n                      Reset\n                    </Button>\n                  ) : null}\n                </div>\n              }\n              title=\"Documentation\"\n              placement=\"topLeft\"\n            >\n              <Icon style={{ cursor: 'pointer' }} type=\"question-circle\" />\n            </Popover>\n          </Checkbox>\n        );\n        break;\n      case 'string':\n        if (!!field.enum) {\n          const selectOptions = field.enum.map(e => (\n            <Option key={e} value={e}>\n              {_humanize(e)}\n            </Option>\n          ));\n          element = field.enableCustom ? (\n            <CustomSelect>{selectOptions}</CustomSelect>\n          ) : (\n            <Select>{selectOptions}</Select>\n          );\n        } else {\n          element = <Input />;\n        }\n        break;\n      case 'object':\n        title = '';\n        return (\n          <Collapse>\n            <Panel key={field.path} header={field.title}>\n              {Object.entries(field.properties).map(child =>\n                this._createFormField(\n                  form,\n                  config,\n                  { ...child[1], path: field.path + `.${child[0]}` },\n                  true\n                )\n              )}\n            </Panel>\n          </Collapse>\n        );\n      default:\n        element = <Input />;\n    }\n\n    if (field.pattern) {\n      validationRule.pattern = field.pattern;\n    }\n\n    const fieldValue = form.getFieldValue(field.path);\n    const showReset =\n      fieldValue !== undefined &&\n      (field.default !== fieldValue || form.isFieldTouched(field.path));\n    return (\n      <Form.Item\n        key={field.path}\n        label={\n          field.description && title ? (\n            <span>\n              {title}&nbsp;\n              <Popover\n                content={\n                  <div>\n                    <ReactMarkdown source={getDescriptionText(field)} />\n                    {showReset ? (\n                      <Button\n                        onClick={() => form.resetFields([field.path])}\n                        type=\"link\"\n                      >\n                        Reset\n                      </Button>\n                    ) : null}\n                  </div>\n                }\n                title=\"Documentation\"\n                placement=\"topLeft\"\n              >\n                <Icon style={{ cursor: 'pointer' }} type=\"question-circle\" />\n              </Popover>\n            </span>\n          ) : (\n            title\n          )\n        }\n        {...(nested ? nestedFormItemLayout : formItemLayout)}\n      >\n        {getFieldDecorator(field.path, {\n          rules: [validationRule],\n          ...attrs,\n          ...decoratorProps,\n        })(element)}\n      </Form.Item>\n    );\n  }\n\n  _elementHasErrors = (form, config) => {\n    return config.elements\n      .map(element => {\n        const paths = !!config.getFieldPaths\n          ? config.getFieldPaths(form, element)\n          : element.path;\n        return (paths instanceof Array ? paths : [paths])\n          .map(path => {\n            return this.props.form.getFieldError(path);\n          })\n          .filter(e => !!e)\n          .map(errors => arrayHasElementsRecursive(errors))\n          .reduce((acc, val) => acc || val, false);\n      })\n      .reduce((val, acc) => val || acc, false);\n  };\n\n  _mapConfigurationToElement = (form, config, nested = false) => {\n    const showKey = 'show_' + config.id;\n    const isVisible = !config.showEnable || this.state[showKey];\n\n    // this has huge potential for bugs. Let's keep it this way\n    const hasErrors = this._elementHasErrors(form, config);\n    if (hasErrors && false) {\n      console.log(\n        'Has errors',\n        config,\n        config.elements.map(element =>\n          this.props.form.getFieldError(element.path)\n        )\n      );\n    }\n\n    return (\n      <Panel\n        header={\n          hasErrors ? (\n            <span style={{ color: 'red' }}>{config.title}</span>\n          ) : (\n            config.title\n          )\n        }\n        key={config.title}\n      >\n        {config.description && <ReactMarkdown source={config.description} />}\n        {config.showEnable ? (\n          <Checkbox keyName={showKey} onChange={this.handleCheckboxChange}>\n            Enable\n          </Checkbox>\n        ) : null}\n\n        {isVisible\n          ? !!config.render\n            ? config.render(form, config)\n            : config.elements.map(e =>\n                this._createFormField(form, config, e, nested)\n              )\n          : null}\n\n        {isVisible && config.children.length ? (\n          <Collapse>\n            {config.children.map(child =>\n              this._mapConfigurationToElement(form, child, true)\n            )}\n          </Collapse>\n        ) : null}\n      </Panel>\n    );\n  };\n\n  handleCheckboxChange = evt => {\n    const state = {};\n    state[evt.target.keyName] = evt.target.checked;\n    this.setState(state, () => {\n      this.props.form.setFieldsValue({});\n    });\n  };\n\n  render() {\n    const { form } = this.props;\n    return (\n      <div>\n        {/*<Button onClick={() => form.validateFields()}>Validate</Button>*/}\n        <h1 className=\"header-margin\">Configuration</h1>\n        <Form layout=\"vertical\">\n          <Collapse bordered={true}>\n            {this.props.formConfig.map(field =>\n              this._mapConfigurationToElement(form, field)\n            )}\n          </Collapse>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedConfigurationForm = Form.create({\n  name: 'register',\n  onValuesChange: (props, changedValues, allValues) =>\n    props.onValuesChange\n      ? props.onValuesChange(changedValues, allValues)\n      : null,\n  onFieldsChange: (props, fields, allFields) =>\n    props.onFieldsChange\n      ? props.onFieldsChange(props, fields, allFields)\n      : null,\n})(ConfigurationForm);\n\nexport default class MainContent extends Component<> {\n  state = {\n    configString: '{}',\n    importModalVisible: false,\n    validateModalVisible: false,\n    importErrors: [],\n    jsonToImportString: '',\n    jsonToImport: {},\n    copied: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.formRef = null;\n    this.formConfig = SchemaParser.parseSchema(GuiConfiguration);\n  }\n\n  _onFieldsChange = debounce((props, fields, allFields) => {\n    // console.log('OnFieldsChange', props, fields, allFields);\n    this.setState({\n      copied: false,\n      configString: JSON.stringify(\n        mapFieldsToConfig(\n          props.form,\n          fields,\n          allFields,\n          this.formConfig,\n          path => dotProp.has(this.state.jsonToImport, path)\n        ),\n        null,\n        2\n      ),\n    });\n  }, 300);\n\n  _importBtnPress = () => {\n    this.setState({ importModalVisible: true });\n  };\n\n  _dirtyAppendersHackTransform = jsonConfig => {\n    return jsonConfig.Logging[0].appenders\n      .filter(\n        e =>\n          console.log(e) ||\n          [\n            'CConsoleAppender',\n            'CFileAppender',\n            'TelemetryAppender',\n            'DiagnosticsAppender',\n          ].indexOf(e['class']) !== -1\n      )\n      .reduce((acc, value) => {\n        acc[value.class] = { enabled: true, ...value };\n        return acc;\n      }, {});\n  };\n\n  _getValidationErrors(jsonObj) {\n    const validationResult = SchemaValidator.validate(jsonObj);\n    // console.log(validationResult);\n    if (validationResult.errors.length) {\n      return validationResult.errors.map(e => e.stack.replace('instance.', ''));\n    }\n\n    this.setState({ importErrors: [] });\n    return [];\n  }\n\n  _handleImportOk = () => {\n    let jsonToImport;\n    let loggingHack;\n    try {\n      jsonToImport = JSON.parse(this.state.jsonToImportString);\n      // lowercase log level enums - dirty hack at its best\n      if (!!jsonToImport.Logging) {\n        jsonToImport.Logging = jsonToImport.Logging.map(L => ({\n          ...L,\n          appenders: L.appenders.map(a => ({\n            ...a,\n            level: a.level.toLowerCase(),\n          })),\n        }));\n      }\n      loggingHack = this._dirtyAppendersHackTransform(jsonToImport);\n    } catch (e) {\n      this.setState({ importErrors: [e.message] });\n      return;\n    }\n\n    const errorList = this._getValidationErrors(jsonToImport);\n    this.setState({ importErrors: errorList });\n\n    // setting mapped value - dirty hack\n    jsonToImport.Logging = loggingHack;\n\n    if (errorList.length) {\n      return;\n    }\n\n    this.setState({ jsonToImport });\n    // console.log('Json to import', jsonToImport);\n    this.formRef.props.form.setFieldsValue(jsonToImport);\n    this.formRef.props.form.validateFields();\n    this.setState({ importModalVisible: false });\n  };\n\n  _handleImportCancel = () => {\n    this.setState({ importModalVisible: false });\n  };\n\n  _showValidation = () => {\n    const config = JSON.parse(this.state.configString);\n    this.formRef.props.form.validateFields();\n    const errorList = this._getValidationErrors(config);\n\n    if (errorList.length) {\n      Modal.error({\n        title: 'Validation',\n        width: 800,\n        content: (\n          <div>\n            {errorList.map((err, index) => (\n              <Alert\n                key={'error' + index}\n                style={{ marginBottom: 4 }}\n                message={err}\n                type=\"error\"\n                showIcon\n              />\n            ))}\n          </div>\n        ),\n      });\n    } else {\n      Modal.success({\n        title: 'Validation',\n        content: 'SDK JSON configuration is valid',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Row>\n        <Col span={9}>\n          <ButtonGroup>\n            <Button type=\"primary\" onClick={this._importBtnPress}>\n              Import configuration\n            </Button>\n            <Button onClick={this._showValidation}>Validate</Button>\n            <Button\n              onClick={() => {\n                navigator.clipboard.writeText(this.state.configString);\n                this.setState({ copied: true });\n              }}\n            >\n              {this.state.copied ? (\n                <span>\n                  <Icon\n                    type=\"check-circle\"\n                    theme=\"twoTone\"\n                    twoToneColor=\"#52c41a\"\n                  />{' '}\n                  Copied\n                </span>\n              ) : (\n                'Copy to Clipboard'\n              )}\n            </Button>\n          </ButtonGroup>\n          <WrappedConfigurationForm\n            wrappedComponentRef={inst => (this.formRef = inst)}\n            formConfig={this.formConfig}\n            onFieldsChange={this._onFieldsChange}\n          />\n        </Col>\n        <Col offset={1} span={14}>\n          <pre>{this.state.configString}</pre>\n        </Col>\n\n        <Modal\n          title=\"Config Import\"\n          width={700}\n          visible={this.state.importModalVisible}\n          onOk={this._handleImportOk}\n          onCancel={this._handleImportCancel}\n        >\n          {this.state.importErrors.map((err, index) => (\n            <Alert\n              key={'error' + index}\n              style={{ marginBottom: 4 }}\n              message={err}\n              type=\"error\"\n              showIcon\n            />\n          ))}\n          <Input.TextArea\n            rows={25}\n            value={this.state.jsonToImportString}\n            onChange={evt =>\n              this.setState({ jsonToImportString: evt.target.value })\n            }\n          />\n        </Modal>\n        <Modal\n          title=\"Validation report\"\n          width={700}\n          visible={this.state.validateModalVisible}\n          onOk={() => this.setState({ validateModalVisible: false })}\n        >\n          {this.state.importErrors.map((err, index) => (\n            <Alert\n              key={'error' + index}\n              style={{ marginBottom: 4 }}\n              message={err}\n              type=\"error\"\n              showIcon\n            />\n          ))}\n        </Modal>\n      </Row>\n    );\n  }\n}\n","import React from 'react';\nimport { Col, Layout, Row } from 'antd';\nimport 'antd/dist/antd.css';\nimport MainContent from \"./components/MainContent\";\n\nconst { Header, Sider, Content } = Layout;\n\n\nfunction App() {\n  return (\n    <Layout>\n      <Header style={{ background: '#ed1b2f' }}>\n        <Row>\n          <Col span={2}>\n            <img\n              alt=\"Sygic\"\n              src={process.env.PUBLIC_URL + '/logo.svg'}\n              style={{ display: 'inline' }}\n            />\n          </Col>\n          <Col span={22}>\n            <h1 style={{ color: 'white' }}>SDK Configuration</h1>\n          </Col>\n        </Row>\n      </Header>\n      <Layout style={{ background: 'white' }}>\n        <Sider style={{ background: 'white' }} />\n        <Content style={{ margin: 20 }}>\n          <MainContent />\n        </Content>\n        <Sider style={{ background: 'white' }} />\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}